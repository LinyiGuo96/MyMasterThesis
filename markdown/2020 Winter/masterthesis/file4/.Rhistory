seasonal_x11 <- series(x11, "d10")
trend_x11 <- series(x11, "d12")
seasonal_kfs <- signal(kfs, "seasonal")$signal
trend_kfs <- signal(kfs, "trend")$signal
l <- sum((seasonal_x11-seasonal_kfs)^2) + sum((trend_x11-trend_kfs)^2) + sum((diff(trend_x11)-diff(trend_kfs))^2)
return(l)
}
loss6 <- function(x11, kfs){
seasonal_x11 <- series(x11, "d10")
trend_x11 <- series(x11, "d12")
seasonal_kfs <- signal(kfs, "seasonal")$signal
trend_kfs <- signal(kfs, "trend")$signal
l <- sum((seasonal_x11-seasonal_kfs)^2) + sum((trend_x11-trend_kfs)^2) + (sum(diff(trend_x11)) - sum(diff(trend_kfs)))^2
return(l)
}
gridsearch <- function(data) {
x11 <- seas(data, x11='')
loss6mat  <- foreach (i = 1:200, .combine = "rbind", .packages = c("KFAS","seasonal")) %:%
foreach(j = 1:200, .combine = "rbind") %dopar% {
ssm <- SSModel(data ~ SSMtrend(1, Q=list(j*0.1)) + SSMseasonal(12, sea.type = 'dummy', Q=1), H=i*0.1)
kfs <- KFS(ssm)
l <- loss6(x11, kfs)
c(i*0.1, j*0.1, l)
}
return(loss6mat[which.min(loss6mat[,3]),c(1,2)])
}
mle_extract <- function(data) {
# note the output is actually the ratio of mle
ssm <- SSModel(data ~ SSMtrend(1, Q=list(NA)) +SSMseasonal(12, sea.type = "dummy", Q=NA), H=NA)
fit <- fitSSM(ssm, inits = c(1,1,1))
kfs <- KFS(fit$model)
var_I <- fit$model["H"][1,1,1]
var_T <- fit$model["Q"][1,1,1]
var_S <- fit$model["Q"][2,2,1]
return(c(var_I/var_S, var_T/var_S))
}
mlemat_simlist <- t(sapply(simlist, mle_extract))
plot(mlemat_simlist[,1])
plot(density(mlemat_simlist[,1]))
plot(density(mlemat_simlist[,2]))
plot(density(idemat1[,1]))
plot(density(idemat1[,2]))
plot(density(mlemat_simlist[,2]))
plot(density(mlemat_simlist[,1]))
plot(density(idemat1[,1]))
plot(density(idemat1[,1]))
plot(density(mlemat_simlist[,1]), xlim=c(0,50), ylim=c(0,0.2))
plot(density(mlemat_simlist[,1]), xlim=c(0,50), ylim=c(0,0.15))
plot(density(mlemat_simlist[,1]), xlim=c(0,50), ylim=c(0,0.15), main='', xlab='')
plot(density(idemat1[,1]), xlim=c(0,50), ylim=c(0,0.15), main='', xlab='')
plot(density(mlemat_simlist[,1]), xlim=c(0,50), ylim=c(0,0.15), main='', xlab='')
par(new=TRUE)
plot(density(idemat1[,1]), xlim=c(0,50), ylim=c(0,0.15), main='', xlab='', col=2)
plot(density(mlemat_simlist[,2]))
View(mle_extract)
plot(density(mlemat_simlist[,2]), xlim=c(0,40), ylim=c(0,0.2), main='', xlab='')
par(new=TRUE)
plot(density(idemat1[,2]), xlim=c(0,40), ylim=c(0,0.2), main='', xlab='')
plot(density(idemat1[,2]), xlim=c(0,40), ylim=c(0,0.2), main='', xlab='')
plot(density(mlemat_simlist[,2]), xlim=c(0,40), ylim=c(0,0.5), main='', xlab='')
par(new=TRUE)
plot(density(idemat1[,2]), xlim=c(0,40), ylim=c(0,0.5), main='', xlab='')
plot(density(mlemat_simlist[,2]), xlim=c(0,40), ylim=c(0,0.4), main='', xlab='')
par(new=TRUE)
plot(density(idemat1[,2]), xlim=c(0,40), ylim=c(0,0.4), main='', xlab='', col=2)
plot(density(mlemat_simlist[,1]), xlim=c(0,50), ylim=c(0,0.15), main='', xlab='')
par(new=TRUE)
plot(density(idemat1[,1]), xlim=c(0,50), ylim=c(0,0.15), main='', xlab='', col=2)
plot(density(mlemat_simlist[,2]), xlim=c(0,40), ylim=c(0,0.4), main='', xlab='')
par(new=TRUE)
plot(density(idemat1[,2]), xlim=c(0,40), ylim=c(0,0.4), main='', xlab='', col=2)
plot(density(mlemat_simlist[,1]), xlim=c(0,50), ylim=c(0,0.15), main='', xlab='')
par(new=TRUE)
plot(density(idemat1[,1]), xlim=c(0,50), ylim=c(0,0.15), main='', xlab='', col=2)
load("C:/Users/guoly/Desktop/markdown/2020 Winter/BuildThePrior/.RData")
str(Idevalmat)
plot(density(Idevalmat[,1]))
plot(density(Idevalmat[,2]))
plot(density(Idevalmat[,3]))
plot(density(Idevalmat[,2]))
plot(density(Idevalmat[,3]))
plot(density(Idevalmat[,2]))
plot(density(Idevalmat[,3]))
plot(density(Idevalmat[,2]))
plot(density(Idevalmat[,3]))
##### posterior #####
library(doParallel)
View(gridsearch)
library(seasonal)
library(KFAS)
unemp_x11 <- seas(unemp, x11='')
par(mfrow=c(2,2))
plot(unemp,ylab='', main='Unemployment')
plot(series(unemp_x11, 'd11'),ylab='', main='Seasonal Adjusted')
plot(series(unemp_x11, 'd12'),ylab='', main='Trend')
plot(series(unemp_x11, 'd10'),ylab='', main='Seasonal')
par(mfrow=c(1,1))
library(doParallel)
library(seasonal)
library(KFAS)
system.time({
cl <- detectCores()
cl <- makeCluster(cl)
registerDoParallel(cl)
clusterExport(cl, c("loss5"))
unemp_loss5  <- foreach (i = 1:200, .combine = "rbind", .packages = c("KFAS","seasonal")) %:%
foreach(j = 1:200, .combine = "rbind") %dopar% {
unemp_ssm <- SSModel(unemp ~ SSMtrend(1, Q=list(j*0.1)) + SSMseasonal(12, sea.type = 'dummy', Q=1), H=i*0.1)
unemp_kfs <- KFS(unemp_ssm)
l <- loss6(unemp_x11, unemp_kfs)
c(i*0.1, j*0.1, l)
}
stopCluster(cl)
})
unemp_loss5[which.min(unemp_loss5[,3]), ]
system.time({
cl <- detectCores()
cl <- makeCluster(cl)
registerDoParallel(cl)
clusterExport(cl, c("loss5"))
unemp_loss5  <- foreach (i = 1:200, .combine = "rbind", .packages = c("KFAS","seasonal")) %:%
foreach(j = 1:200, .combine = "rbind") %dopar% {
unemp_ssm <- SSModel(unemp ~ SSMtrend(1, Q=list(j*0.1)) + SSMseasonal(12, sea.type = 'dummy', Q=1), H=i*0.1)
unemp_kfs <- KFS(unemp_ssm)
l <- loss5(unemp_x11, unemp_kfs)
c(i*0.1, j*0.1, l)
}
stopCluster(cl)
})
unemp_loss5[which.min(unemp_loss5[,3]), ] #
library(scales)
unemp_ssm0 <- SSModel(unemp ~ SSMtrend(1, Q=list(NA)) + SSMseasonal(12, sea.type = 'dummy', Q=NA), H=NA)
unemp_fit0 <- fitSSM(unemp_ssm0, inits=c(1,1,1))
unemp_kfs0 <- KFS(unemp_fit0$model)
unemp_ssm5 <- SSModel(unemp ~ SSMtrend(1, Q=list(1.3)) + SSMseasonal(12, sea.type = 'dummy', Q=1), H=1.9)
unemp_kfs5 <- KFS(unemp_ssm5)
plot(series(unemp_x11, "d12"),ylim=c(5500, 15500), ylab='', lwd=1, col=alpha('black',.5))
par(new=TRUE)
plot(signal(unemp_kfs0, "trend")$signal, ylim=c(5500, 15500), ylab='',col=alpha('red',.5), lwd=1)
title(main='trend')
legend('topleft', c('X-11', 'SSM_MLE'), col=c(1,2), lty=1)
par(mfrow=c(2,1))
plot(series(unemp_x11, "d12"),ylim=c(5500, 15500), ylab='', lwd=1, col=alpha('black',.5))
par(new=TRUE)
plot(signal(unemp_kfs0, "trend")$signal, ylim=c(5500, 15500), ylab='',col=alpha('red',.5), lwd=1)
title(main='trend')
legend('topleft', c('X-11', 'SSM_MLE'), col=c(1,2), lty=1)
plot(series(unemp_x11, "d12"),ylim=c(5500, 15500), ylab='', lwd=1, col=alpha('black',.5))
par(new=TRUE)
plot(signal(unemp_kfs0, "trend")$signal, ylim=c(5500, 15500), ylab='',col=alpha('red',.5), lwd=1)
title(main='trend')
legend('topleft', c('x11', 'SSM_MLE'), col=c(1,2), lty=1)
par(mfrow=c(1,1))
par(mfrow=c(2,1))
plot(series(unemp_x11, "d12"),ylim=c(5500, 15500), ylab='', lwd=1, col=alpha('black',.5))
par(new=TRUE)
plot(signal(unemp_kfs0, "trend")$signal, ylim=c(5500, 15500), ylab='',col=alpha('red',.5), lwd=1)
title(main='trend')
legend('topleft', c('X-11', 'SSM_MLE'), col=c(1,2), lty=1)
plot(series(unemp_x11, "d12"),ylim=c(5500, 15500), ylab='', lwd=1, col=alpha('black',.5))
par(new=TRUE)
plot(signal(unemp_kfs0, "trend")$signal, ylim=c(5500, 15500), ylab='',col=alpha('red',.5), lwd=1)
title(main='trend')
legend('topleft', c('x11', 'SSM_MLE'), col=c(1,2), lty=1)
par(mfrow=c(1,1))
par(mfrow=c(2,1))
plot(series(unemp_x11, "d12"),ylim=c(5500, 15500), ylab='', lwd=1, col=alpha('black',.5))
par(new=TRUE)
plot(signal(unemp_kfs0, "trend")$signal, ylim=c(5500, 15500), ylab='',col=alpha('red',.5), lwd=1)
title(main='trend')
legend('topleft', c('X-11', 'SSM_MLE'), col=c(1,2), lty=1)
plot(series(unemp_x11, "d12"),ylim=c(5500, 15500), ylab='', lwd=1, col=alpha('black',.5))
par(new=TRUE)
plot(signal(unemp_kfs0, "trend")$signal, ylim=c(5500, 15500), ylab='',col=alpha('red',.5), lwd=1)
title(main='trend')
legend('topleft', c('x11', 'SSM_MLE'), col=c(1,2), lty=1)
par(mfrow=c(1,1))
par(mfrow=c(2,1))
plot(series(unemp_x11, "d11"), ylim=c(5500, 15500), ylab='', lwd=1, col=alpha('black',.5))
par(new=TRUE)
plot(unemp - signal(unemp_kfs0, "seasonal")$signal, ylab='', lwd=1, col=alpha('red',.5), ylim=c(5500, 15500))
title(main='Seasonal adjusted')
legend('topleft', c('x11', 'SSM_MLE'), col=c(1,2), lty=1)
plot(series(unemp_x11, "d12"),ylim=c(5500, 15500), ylab='', lwd=1, col=alpha('black',.5))
par(new=TRUE)
plot(signal(unemp_kfs0, "trend")$signal, ylim=c(5500, 15500), ylab='',col=alpha('red',.5), lwd=1)
title(main='trend')
legend('topleft', c('x11', 'SSM_MLE'), col=c(1,2), lty=1)
par(mfrow=c(1,1))
par(mfrow=c(2,1))
plot(series(unemp_x11, "d11"), ylim=c(5500, 15500), ylab='', lwd=2, col=alpha('black',.5))
par(new=TRUE)
plot(unemp - signal(unemp_kfs0, "seasonal")$signal, ylab='', lwd=2, col=alpha('red',.5), ylim=c(5500, 15500))
title(main='Seasonal adjusted')
legend('topleft', c('x11', 'SSM_MLE'), col=c(1,2), lty=1, lwd=2)
plot(series(unemp_x11, "d12"),ylim=c(5500, 15500), ylab='', lwd=2, col=alpha('black',.5))
par(new=TRUE)
plot(signal(unemp_kfs0, "trend")$signal, ylim=c(5500, 15500), ylab='',col=alpha('red',.5), lwd=2)
title(main='trend')
legend('topleft', c('x11', 'SSM_MLE'), col=c(1,2), lty=1, lwd=2)
par(mfrow=c(1,1))
View(loss5)
par(mfrow=c(2,1))
plot(series(unemp_x11, "d11"), ylim=c(5500, 15500), ylab='', lwd=2, col=alpha('black',.5))
par(new=TRUE)
plot(unemp - signal(unemp_kfs0, "seasonal")$signal, ylab='', lwd=2, col=alpha('red',.5), ylim=c(5500, 15500))
par(new=TRUE)
plot(unemp - signal(unemp_kfs5, "seasonal")$signal, ylab='', lwd=2, col=alpha('blue',.5), ylim=c(5500, 15500))
title(main='Seasonal adjusted')
legend('topleft', c('X-11', 'SSM_MLE', 'SSM_LOSS'), col=c(1,2,4), lty=1, lwd=2)
plot(series(unemp_x11, "d12"),ylim=c(5500, 15500), ylab='', lwd=2, col=alpha('black',.5))
par(new=TRUE)
plot(signal(unemp_kfs0, "trend")$signal, ylim=c(5500, 15500), ylab='',col=alpha('red',.5), lwd=2)
par(new=TRUE)
plot(signal(unemp_kfs5, "trend")$signal, ylim=c(5500, 15500), ylab='',col=alpha('blue',.5), lwd=2)
title(main='Trend')
legend('topleft', c('X-11', 'SSM_MLE', 'SSM_LOSS'), col=c(1,2,4), lty=1, lwd=2)
par(mfrow=c(1,1))
par(mfrow=c(2,1))
plot(series(unemp_x11, "d11"), ylim=c(5500, 15500), ylab='', lwd=2, col=alpha('black',.5))
par(new=TRUE)
plot(unemp - signal(unemp_kfs0, "seasonal")$signal, ylab='', lwd=2, col=alpha('red',.5), ylim=c(5500, 15500))
par(new=TRUE)
plot(unemp - signal(unemp_kfs5, "seasonal")$signal, ylab='', lwd=2, col=alpha('blue',.5), ylim=c(5500, 15500))
title(main='Seasonal adjusted')
legend('topleft', c('X-11', 'SSM_MLE', 'SSM_LOSS'), col=c(1,2,4), lty=1, lwd=2)
plot(series(unemp_x11, "d12"),ylim=c(5500, 15500), ylab='', lwd=2, col=alpha('black',.5))
par(new=TRUE)
plot(signal(unemp_kfs0, "trend")$signal, ylim=c(5500, 15500), ylab='',col=alpha('red',.5), lwd=2)
par(new=TRUE)
plot(signal(unemp_kfs5, "trend")$signal, ylim=c(5500, 15500), ylab='',col=alpha('blue',.5), lwd=2)
title(main='Trend')
legend('topleft', c('X-11', 'SSM_MLE', 'SSM_LOSS'), col=c(1,2,4), lty=1, lwd=2)
par(mfrow=c(1,1))
par(mfrow=c(2,1))
plot(series(unemp_x11, "d11"), ylim=c(5500, 15500), ylab='', lwd=2, col=alpha('black',.5))
par(new=TRUE)
plot(unemp - signal(unemp_kfs0, "seasonal")$signal, ylab='', lwd=2, col=alpha('red',.5), ylim=c(5500, 15500))
par(new=TRUE)
plot(unemp - signal(unemp_kfs5, "seasonal")$signal, ylab='', lwd=2, col=alpha('blue',.5), ylim=c(5500, 15500))
title(main='Seasonal adjusted')
legend('topleft', c('X-11', 'SSM_MLE', 'SSM_LOSS'), col=c(1,2,4), lty=1, lwd=2)
plot(series(unemp_x11, "d12"),ylim=c(5500, 15500), ylab='', lwd=2, col=alpha('black',.5))
par(new=TRUE)
plot(signal(unemp_kfs0, "trend")$signal, ylim=c(5500, 15500), ylab='',col=alpha('red',.5), lwd=2)
par(new=TRUE)
plot(signal(unemp_kfs5, "trend")$signal, ylim=c(5500, 15500), ylab='',col=alpha('blue',.5), lwd=2)
title(main='Trend')
legend('topleft', c('X-11', 'SSM_MLE', 'SSM_LOSS'), col=c(1,2,4), lty=1, lwd=2)
par(mfrow=c(1,1))
par(mfrow=c(2,1))
plot(series(unemp_x11, "d11"), ylim=c(5500, 15500), ylab='', lwd=2, col=alpha('black',.5))
par(new=TRUE)
plot(unemp - signal(unemp_kfs0, "seasonal")$signal, ylab='', lwd=2, col=alpha('red',.5), ylim=c(5500, 15500))
title(main='Seasonal adjusted')
legend('topleft', c('X-11', 'SSM_MLE'), col=c(1,2), lty=1, lwd=2)
plot(series(unemp_x11, "d12"),ylim=c(5500, 15500), ylab='', lwd=2, col=alpha('black',.5))
par(new=TRUE)
plot(signal(unemp_kfs0, "trend")$signal, ylim=c(5500, 15500), ylab='',col=alpha('red',.5), lwd=2)
title(main='Trend')
legend('topleft', c('X-11', 'SSM_MLE'), col=c(1,2), lty=1, lwd=2)
par(mfrow=c(1,1))
library(seasonal)
library(KFAS)
unemp_x11 <- seas(unemp, x11='')
par(mfrow=c(2,2))
plot(unemp,ylab='', main='Unemployment')
plot(series(unemp_x11, 'd11'),ylab='', main='Seasonal Adjusted')
plot(series(unemp_x11, 'd12'),ylab='', main='Trend')
plot(series(unemp_x11, 'd10'),ylab='', main='Seasonal')
par(mfrow=c(1,1))
par(mfrow=c(2,1))
plot(series(unemp_x11, "d11"), ylim=c(5500, 15500), ylab='', lwd=2, col=alpha('black',.5))
par(new=TRUE)
plot(unemp - signal(unemp_kfs0, "seasonal")$signal, ylab='', lwd=2, col=alpha('red',.5), ylim=c(5500, 15500))
title(main='Seasonal adjusted')
legend('topleft', c('X-11', 'SSM_MLE'), col=c(1,2), lty=1, lwd=2)
plot(series(unemp_x11, "d12"),ylim=c(5500, 15500), ylab='', lwd=2, col=alpha('black',.5))
par(new=TRUE)
plot(signal(unemp_kfs0, "trend")$signal, ylim=c(5500, 15500), ylab='',col=alpha('red',.5), lwd=2)
title(main='Trend')
legend('topleft', c('X-11', 'SSM_MLE'), col=c(1,2), lty=1, lwd=2)
par(mfrow=c(1,1))
View(loss6)
rm(list = ls())
load(file='C:/Users/GuoLY/desktop/markdown/2020 Winter/masterthesis/.RData')
plot(density(idemat2[,1]), ylim=c(0,0.15), xlim=c(0,40), lwd=2, xlab='', main='')
par(new=TRUE)
plot(density(mlemat[,1]), ylim=c(0,0.15), xlim=c(0,40), lwd=2, xlab='', main='', col=2)
density(idemat[,1])
plot(density(idemat[,1]))
rm(list = ls())
load(file='C:/Users/GuoLY/desktop/markdown/2020 Winter/masterthesis/.RData')
plot(density(idemat[,1]), xlab='', main='Distribution of irregular variance estimators from Step2')
plot(density(idemat[,2]), xlab='', main='Distribution of trend variance estimators from Step2')
rm(list = ls())
load(file='C:/Users/GuoLY/desktop/markdown/2020 Winter/masterthesis/.RData')
rm(list = ls())
load(file='C:/Users/GuoLY/desktop/markdown/2020 Winter/masterthesis/.RData')
plot(density(idemat2[,1]), xlab='Irregular variance', main='Distribution of irregular variance estimators from Step2')
plot(density(idemat2[,2]), xlab='Trend variance', main='Distribution of trend variance estimators from Step2')
rm(list = ls())
load(file='C:/Users/GuoLY/desktop/markdown/2020 Winter/masterthesis/.RData')
plot(density(idemat2[,1]), xlab='Irregular variance', main='Distribution of irregular variance estimators from Step2')
plot(density(idemat2[,2]), xlab='Trend variance', main='Distribution of trend variance estimators from Step2')
rm(list = ls())
load(file='C:/Users/GuoLY/desktop/markdown/2020 Winter/masterthesis/.RData')
plot(density(idemat2[,1]), xlab='Irregular variance', main='Distribution of irregular variance estimators from Step2')
plot(density(idemat2[,2]), xlab='Trend variance', main='Distribution of trend variance estimators from Step2')
rm(list = ls())
load(file='C:/Users/GuoLY/desktop/markdown/2020 Winter/masterthesis/.RData')
plot(density(idemat2[,1]), xlab='Irregular variance', main='Distribution of irregular variance estimators from Step2')
plot(density(idemat2[,2]), xlab='Trend variance', main='Distribution of trend variance estimators from Step2')
plot(density(mlemat[c(1:100),2]), ylim=c(0,0.60), xlim=c(0,20), lwd=2, xlab='', main='')
par(new=TRUE)
plot(density(idemat1[,2]),ylim=c(0,0.60), xlim=c(0,20), lwd=2, xlab='', main='', col=2)
par(new=TRUE)
plot(density(idemat2[,2]),ylim=c(0,0.60), xlim=c(0,20), lwd=2, xlab='', main='', col=3)
par(new=TRUE)
plot(density(postmat[,2]),ylim=c(0,0.60), xlim=c(0,20), lwd=2, xlab='', main='', col=4)
View(post_extract)
View(naivepost_extract)
library(seasonal)
library(KFAS)
air_ssm0 <- SSModel(AirPassengers~ SSMtrend(1, Q=list(NA)) + SSMseasonal(12, sea.type='dummy', Q=NA), H=NA)
air_fit0 <- fitSSM(air_ssm0)
air_kfs0 <- KFS(air_fit0$model)
air_ssm0 <- SSModel(AirPassengers~ SSMtrend(1, Q=list(NA)) + SSMseasonal(12, sea.type='dummy', Q=NA), H=NA)
air_fit0 <- fitSSM(air_ssm0, inits = c(1,1,1))
air_kfs0 <- KFS(air_fit0$model)
air_x11 <- seas(AirPassengers, seas='')
air_x11 <- seas(AirPassengers, x11='')
plot(series(air_x11, "d12"), ylab='', lwd=2)
plot(series(air_x11, "d12"), ylim=c(100,500),ylab='', lwd=2)
plot(signal(air_kfs0, "trend")$signal, ylim=c(100,500), ylab='',col=2, lwd=2)
plot(series(air_x11, "d12"), ylim=c(100,500),ylab='', lwd=2)
par(new=TRUE)
plot(signal(air_kfs0, "trend")$signal, ylim=c(100,500), ylab='',col=2, lwd=2)
summary(air_fit0$model)
summary(air_kfs0)
summary(air_ssm0)
summary(air_x11)
plot(density(postmat1[,1]), xlab='Irregular variance', main='Distribution of MAP estimators for irregular variance')
plot(density(postmat2[,2]), xlab='Trend variance', main='Distribution of MAP estimators for trend variance')
plot(density(postmat1[,1]), xlab='Irregular variance', main='Distribution of MAP estimators for irregular variance')
plot(density(postmat1[,2]), xlab='Trend variance', main='Distribution of MAP estimators for trend variance')
par(mfrow=c(2,2))
plot(density(mlemat[c(1:100),1]), xlab='Irregular variance', main='Distribution of MLEs for irregular variance')
plot(density(mlemat[c(1:100),2]), xlab='Trend variance', main='Distribution of MLEs for trend variance')
plot(density(idemat[c(1:100),1]), xlab='Irregular variance', main='Distribution of 'good' estimators for irregular variance')
par(mfrow=c(2,2))
plot(density(mlemat[c(1:100),1]), xlab='Irregular variance', main='Distribution of MLEs for irregular variance')
plot(density(mlemat[c(1:100),2]), xlab='Trend variance', main='Distribution of MLEs for trend variance')
plot(density(idemat[c(1:100),1]), xlab='Irregular variance', main='Distribution of \'good\' estimators for irregular variance')
plot(density(idemat[c(1:100),2]), xlab='Trend variance', main='Distribution of \'good\' estimators for trend variance')
par(mfrow=c(1,1)
par(mfrow=c(2,2))
plot(density(mlemat[c(1:100),1]), xlab='Irregular variance', main='Distribution of MLEs for irregular variance')
plot(density(mlemat[c(1:100),2]), xlab='Trend variance', main='Distribution of MLEs for trend variance')
plot(density(idemat[c(1:100),1]), xlab='Irregular variance', main='Distribution of \'good\' estimators for irregular variance')
plot(density(idemat[c(1:100),2]), xlab='Trend variance', main='Distribution of \'good\' estimators for trend variance')
par(mfrow=c(1,1))
par(mfrow=c(2,2))
plot(density(mlemat[c(1:100),1]), xlab='Irregular variance', main='MLEs for irregular variance')
plot(density(mlemat[c(1:100),2]), xlab='Trend variance', main='MLEs for trend variance')
plot(density(idemat[c(1:100),1]), xlab='Irregular variance', main='\'Good\' estimators for irregular variance')
plot(density(idemat[c(1:100),2]), xlab='Trend variance', main='Good\' estimators for trend variance')
par(mfrow=c(1,1))
par(mfrow=c(2,2))
plot(density(mlemat[c(1:100),1]), xlab='Irregular variance', main='MLEs for irregular variance')
plot(density(mlemat[c(1:100),2]), xlab='Trend variance', main='MLEs for trend variance')
plot(density(idemat[c(1:100),1]), xlab='Irregular variance', main='\'Good\' estimators for irregular variance')
plot(density(idemat[c(1:100),2]), xlab='Trend variance', main='Good\' estimators for trend variance')
par(mfrow=c(1,1))
par(mfrow=c(2,2))
plot(density(mlemat[c(1:100),1]), xlab='Irregular variance', main='Distribution of MLEs for irregular variance')
plot(density(mlemat[c(1:100),2]), xlab='Trend variance', main='Distribution of MLEs for trend variance')
plot(density(idemat[c(1:100),1]), xlab='Irregular variance', main='Distribution of \'good\' estimators for irregular variance')
plot(density(idemat[c(1:100),2]), xlab='Trend variance', main='Distribution of \'good\' estimators for trend variance')
par(mfrow=c(1,1))
plot(density(postmat1[,1]), xlim=c(0,60))
par(new=TRUE)
plot(density(mlemat[c(1:100),1]), xlim=c(0,60))
par(new=TRUE)
plot(density(idemat[c(1:100),1]), xlim=c(0,60), xlab='Irregular variance', main='Comparison of different estimators for irregular variance')
plot(density(postmat1[,1]), ylim=c(0,0.3), xlim=c(0,60), main='', xlab='')
par(new=TRUE)
plot(density(mlemat[c(1:100),1]),ylim=c(0,0.3),  xlim=c(0,60), main='', xlab='')
par(new=TRUE)
plot(density(idemat[c(1:100),1]), ylim=c(0,0.3), xlim=c(0,60), xlab='Irregular variance', main='Comparison of different estimators for irregular variance')
plot(density(postmat1[,1]), ylim=c(0,0.3), xlim=c(0,50), main='', xlab='', col=4)
par(new=TRUE)
plot(density(mlemat[c(1:100),1]),ylim=c(0,0.3),  xlim=c(0,50), main='', xlab='', col=2)
par(new=TRUE)
plot(density(idemat[c(1:100),1]), ylim=c(0,0.3), xlim=c(0,50), xlab='Irregular variance', main='Comparison of different estimators for irregular variance')
legend('topleft', c('Ideal', 'MLE', 'MAP'), col=c(1,2,4), lty=1, lwd=1)
plot(density(postmat1[,2]), ylim=c(0,0.6), xlim=c(0,25), main='', xlab='', col=4)
par(new=TRUE)
plot(density(mlemat[c(1:100),2]), ylim=c(0,0.6), xlim=c(0,25), main='', xlab='', col=2)
par(new=TRUE)
plot(density(idemat[c(1:100),2]), ylim=c(0,0.6), xlim=c(0,25), xlab='Trend variance', main='Comparison of different estimators for trend variance')
legend('topleft', c('Ideal', 'MLE', 'MAP'), col=c(1,2,4), lty=1, lwd=1)
plot(density(postmat1[,1]), ylim=c(0,0.3), xlim=c(0,50), main='', xlab='', col=4)
par(new=TRUE)
plot(density(mlemat[c(1:100),1]),ylim=c(0,0.3),  xlim=c(0,50), main='', xlab='', col=2)
par(new=TRUE)
plot(density(idemat[c(1:100),1]), ylim=c(0,0.3), xlim=c(0,50), xlab='Irregular variance', main='Comparison of different estimators for irregular variance')
legend('topright', c('Ideal', 'MLE', 'MAP'), col=c(1,2,4), lty=1, lwd=1)
plot(density(postmat1[,2]), ylim=c(0,0.6), xlim=c(0,25), main='', xlab='', col=4)
par(new=TRUE)
plot(density(mlemat[c(1:100),2]), ylim=c(0,0.6), xlim=c(0,25), main='', xlab='', col=2)
par(new=TRUE)
plot(density(idemat[c(1:100),2]), ylim=c(0,0.6), xlim=c(0,25), xlab='Trend variance', main='Comparison of different estimators for trend variance')
legend('topright', c('Ideal', 'MLE', 'MAP'), col=c(1,2,4), lty=1, lwd=1)
plot(density(postmat1[,1]), ylim=c(0,0.3), xlim=c(0,50), main='', xlab='', col=4)
par(new=TRUE)
plot(density(mlemat[c(1:100),1]),ylim=c(0,0.3),  xlim=c(0,50), main='', xlab='', col=2)
par(new=TRUE)
plot(density(idemat[c(1:100),1]), ylim=c(0,0.3), xlim=c(0,50), xlab='Irregular variance', main='Comparison of different estimators for irregular variance')
legend('topright', c('GOOD', 'MLE', 'MAP'), col=c(1,2,4), lty=1, lwd=1)
plot(density(postmat1[,2]), ylim=c(0,0.6), xlim=c(0,25), main='', xlab='', col=4)
par(new=TRUE)
plot(density(mlemat[c(1:100),2]), ylim=c(0,0.6), xlim=c(0,25), main='', xlab='', col=2)
par(new=TRUE)
plot(density(idemat[c(1:100),2]), ylim=c(0,0.6), xlim=c(0,25), xlab='Trend variance', main='Comparison of different estimators for trend variance')
legend('topright', c('GOOD', 'MLE', 'MAP'), col=c(1,2,4), lty=1, lwd=1)
cadrmb <- load('C:\\Users\\guoly\\Downloads\\cadtormb.csv')
cadrmb <- read.csv('C:\\Users\\guoly\\Downloads\\cadtormb.csv')
cadrmb <- read.csv('C:\\Users\\guoly\\Downloads\\cadrmb.csv')
cadrmb <- read.csv('C:\\Users\\guoly\\Downloads\\cadrmb.csv')
plot(cadrmb, type='l')
class(cadrmb)
stopCluster(cl)
class(cadrmb)
a <- cadrmb[,1]
plot(a)
plot(a, type='l')
a <- ts(a, start = c(2020,3), frequency = 12)
plot(a, type='l')
a <- cadrmb[,1]
a <- ts(a, start = c(2000,3), frequency = 12)
plot(a, type='l')
a_x11 <- seas(a, x11='')
library(seasonal)
library(KFAS)
a_x11 <- seas(a, x11='')
plot(a_x11)
summary(a_x11)
View(data1_kfspost)
plot(dataegshort_fc, xlim=c(2000, 2015),ylim=c(-20,70), ylab='')
par(new=TRUE)
plot(window(dataeg, start=c(2014,01), end=c(2014,12)), xlim=c(2000,2015), ylim = c(-20,70), col=1, lwd=2, ylab='')
par(new=TRUE)
plot(series(dataegshort_x11, 'fct')[,1], xlim=c(2000,2015), ylim = c(-20,70), col=2, lwd=2, ylab='')
par(new=TRUE)
plot(predict(dataegshort_ssm0, n.ahead = 12, interval = 'prediction', level = .95)[,1], col=3, lwd=2, xlim=c(2000, 2015), ylim=c(-20,70), ylab='')
par(new=TRUE)
plot(predict(dataegshort_ssm5, n.ahead = 12, interval = 'prediction', level = .95)[,1], col=5, lwd=2, xlim=c(2000, 2015), ylim=c(-20,70), ylab='')
legend('topleft', c('True', 'X-11', 'SSM_MLE','SSM_LOSS', 'Forecast'), col=c(1,2,3,5,4), lty=1, lwd=2)
#########################################################################################
library(seasonal)
library(KFAS)
plot(dataegshort_fc, xlim=c(2000, 2015),ylim=c(-20,70), ylab='')
par(new=TRUE)
plot(window(dataeg, start=c(2014,01), end=c(2014,12)), xlim=c(2000,2015), ylim = c(-20,70), col=1, lwd=2, ylab='')
par(new=TRUE)
plot(series(dataegshort_x11, 'fct')[,1], xlim=c(2000,2015), ylim = c(-20,70), col=2, lwd=2, ylab='')
par(new=TRUE)
plot(predict(dataegshort_ssm0, n.ahead = 12, interval = 'prediction', level = .95)[,1], col=3, lwd=2, xlim=c(2000, 2015), ylim=c(-20,70), ylab='')
par(new=TRUE)
plot(predict(dataegshort_ssm5, n.ahead = 12, interval = 'prediction', level = .95)[,1], col=5, lwd=2, xlim=c(2000, 2015), ylim=c(-20,70), ylab='')
legend('topleft', c('True', 'X-11', 'SSM_MLE','SSM_LOSS', 'Forecast'), col=c(1,2,3,5,4), lty=1, lwd=2)
rm(list=ls())
getwd()
rm(list = ls())
setwd('C:/Users/GuoLY/desktop/markdown/2020 Winter/masterthesis/file4')
load('.RData')
plot(dataegshort_fc, xlim=c(2000, 2015),ylim=c(-20,70), ylab='')
par(new=TRUE)
plot(window(dataeg, start=c(2014,01), end=c(2014,12)), xlim=c(2000,2015), ylim = c(-20,70), col=1, lwd=2, ylab='')
par(new=TRUE)
plot(series(dataegshort_x11, 'fct')[,1], xlim=c(2000,2015), ylim = c(-20,70), col=2, lwd=2, ylab='')
par(new=TRUE)
plot(predict(dataegshort_ssm0, n.ahead = 12, interval = 'prediction', level = .95)[,1], col=3, lwd=2, xlim=c(2000, 2015), ylim=c(-20,70), ylab='')
par(new=TRUE)
plot(predict(dataegshort_ssm5, n.ahead = 12, interval = 'prediction', level = .95)[,1], col=5, lwd=2, xlim=c(2000, 2015), ylim=c(-20,70), ylab='')
legend('topleft', c('True', 'X-11', 'SSM_MLE','SSM_LOSS', 'Forecast'), col=c(1,2,3,5,4), lty=1, lwd=2)
dataeg <- simlist[[1]]
dataegshort <- window(dataeg, end=c(2013,12))
plot(dataegshort_fc, xlim=c(2000, 2015),ylim=c(-20,70), ylab='')
par(new=TRUE)
plot(window(dataeg, start=c(2014,01), end=c(2014,12)), xlim=c(2000,2015), ylim = c(-20,70), col=1, lwd=2, ylab='')
par(new=TRUE)
plot(series(dataegshort_x11, 'fct')[,1], xlim=c(2000,2015), ylim = c(-20,70), col=2, lwd=2, ylab='')
par(new=TRUE)
plot(predict(dataegshort_ssm0, n.ahead = 12, interval = 'prediction', level = .95)[,1], col=3, lwd=2, xlim=c(2000, 2015), ylim=c(-20,70), ylab='')
par(new=TRUE)
plot(predict(dataegshort_ssm5, n.ahead = 12, interval = 'prediction', level = .95)[,1], col=5, lwd=2, xlim=c(2000, 2015), ylim=c(-20,70), ylab='')
legend('topleft', c('True', 'X-11', 'SSM_MLE','SSM_LOSS', 'Forecast'), col=c(1,2,3,5,4), lty=1, lwd=2)
plot(dataegshort_fc, xlim=c(2000, 2015),ylim=c(-20,70), ylab='')
dataegshort_fc <- forecast(dataegshort, h=12)
library(forecast)
plot(dataegshort_fc, xlim=c(2000, 2015),ylim=c(-20,70), ylab='')
par(new=TRUE)
plot(window(dataeg, start=c(2014,01), end=c(2014,12)), xlim=c(2000,2015), ylim = c(-20,70), col=1, lwd=2, ylab='')
par(new=TRUE)
plot(series(dataegshort_x11, 'fct')[,1], xlim=c(2000,2015), ylim = c(-20,70), col=2, lwd=2, ylab='')
par(new=TRUE)
plot(predict(dataegshort_ssm0, n.ahead = 12, interval = 'prediction', level = .95)[,1], col=3, lwd=2, xlim=c(2000, 2015), ylim=c(-20,70), ylab='')
par(new=TRUE)
plot(predict(dataegshort_ssm5, n.ahead = 12, interval = 'prediction', level = .95)[,1], col=5, lwd=2, xlim=c(2000, 2015), ylim=c(-20,70), ylab='')
legend('topleft', c('True', 'X-11', 'SSM_MLE','SSM_LOSS', 'Forecast'), col=c(1,2,3,5,4), lty=1, lwd=2)
