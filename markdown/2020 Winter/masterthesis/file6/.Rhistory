par(new=TRUE)
plot(signal(dataeg_kfs0, "trend", filtered = TRUE)$signal[-1], type = 'l', ylim=c(-25,25), ylab='', col=4, lwd=2)
?ma
??ma
#####################################################################################
library(ma)
#####################################################################################
library(forecast)
?ma
plot(ma(signal(dataeg_kfs5, "trend", filtered = TRUE)$signal[-1], order=5))
length(ma(signal(dataeg_kfs5, "trend", filtered = TRUE)$signal[-1], order=5))
length(ma(signal(dataeg_kfs5, "trend", filtered = TRUE)$signal, order=5))
plot(series(dataeg_x11, "d12"),ylim=c(-25,25), ylab='', lwd=2)
par(new=TRUE)
plot(ma(signal(dataeg_kfs5, "trend", filtered = TRUE)$signal, order=5))
plot(series(dataeg_x11, "d12"),ylim=c(-25,25), ylab='', lwd=2)
par(new=TRUE)
plot(ma(signal(dataeg_kfs5, "trend", filtered = TRUE)$signal, order=5),ylim=c(-25,25), ylab='', lwd=2, col=2)
plot(series(dataeg_x11, "d12")[-180],ylim=c(-25,25), ylab='', lwd=2)
par(new=TRUE)
plot(ma(signal(dataeg_kfs5, "trend", filtered = TRUE)$signal[-1], order=5),ylim=c(-25,25), ylab='', lwd=2, col=2)
plot(series(dataeg_x11, "d12")[-180],type='l',ylim=c(-25,25), ylab='', lwd=2)
par(new=TRUE)
plot(ma(signal(dataeg_kfs5, "trend", filtered = TRUE)$signal[-1], order=5),ylim=c(-25,25), ylab='', lwd=2, col=2)
plot(series(dataeg_x11, "d12")[-180],type='l',ylim=c(-25,25), ylab='', lwd=2)
par(new=TRUE)
plot(signal(dataeg_kfs5, "trend")$signal[-180],type='l', ylim=c(-25,25), ylab='',col=2, lwd=2)
par(new=TRUE)
plot(ma(signal(dataeg_kfs5, "trend", filtered = TRUE)$signal[-1], order=5),ylim=c(-25,25), ylab='', lwd=2, col=6)
plot(series(dataeg_x11, "d12")[-180],type='l',ylim=c(-25,25), ylab='', lwd=2)
par(new=TRUE)
plot(signal(dataeg_kfs5, "trend")$signal[-180],type='l', ylim=c(-25,25), ylab='',col=2, lwd=2)
par(new=TRUE)
plot(ma(signal(dataeg_kfs5, "trend", filtered = TRUE)$signal[-1], order=5),ylim=c(-25,25), ylab='', lwd=2, col=2)
plot(series(dataeg_x11, "d12")[-180],type='l',ylim=c(-25,25), ylab='', lwd=2)
par(new=TRUE)
plot(signal(dataeg_kfs5, "trend")$signal[-180],type='l', ylim=c(-25,25), ylab='',col=2, lwd=2)
par(new=TRUE)
plot(ma(signal(dataeg_kfs5, "trend", filtered = TRUE)$signal[-1], order=5),ylim=c(-25,25), ylab='', lwd=2, col=3)
plot(series(dataeg_x11, "d12")[-180],type='l',ylim=c(-25,25), ylab='', lwd=2)
par(new=TRUE)
plot(signal(dataeg_kfs5, "trend")$signal[-180],type='l', ylim=c(-25,25), ylab='',col=2, lwd=2)
par(new=TRUE)
plot(ma(signal(dataeg_kfs5, "trend", filtered = TRUE)$signal, order=5)[-1],ylim=c(-25,25), ylab='', lwd=2, col=3)
plot(series(dataeg_x11, "d12")[-180],type='l',ylim=c(-25,25), ylab='', lwd=2)
par(new=TRUE)
plot(signal(dataeg_kfs5, "trend")$signal[-180],type='l', ylim=c(-25,25), ylab='',col=2, lwd=2)
par(new=TRUE)
plot(ma(signal(dataeg_kfs5, "trend", filtered = TRUE)$signal, order=5)[-1],type='l',ylim=c(-25,25), ylab='', lwd=2, col=3)
plot(series(dataeg_x11, "d12")[-180],type='l',ylim=c(-25,25), ylab='', lwd=2)
par(new=TRUE)
plot(signal(dataeg_kfs5, "trend")$signal[-180],type='l', ylim=c(-25,25), ylab='',col=2, lwd=2)
par(new=TRUE)
plot(ma(signal(dataeg_kfs5, "trend", filtered = TRUE)$signal, order=3)[-1],type='l',ylim=c(-25,25), ylab='', lwd=2, col=3)
plot(series(dataeg_x11, "d12")[-180],type='l',ylim=c(-25,25), ylab='', lwd=2)
par(new=TRUE)
plot(signal(dataeg_kfs5, "trend")$signal[-180],type='l', ylim=c(-25,25), ylab='',col=2, lwd=2)
par(new=TRUE)
plot(ma(signal(dataeg_kfs5, "trend", filtered = TRUE)$signal, order=7)[-1],type='l',ylim=c(-25,25), ylab='', lwd=2, col=3)
plot(series(dataeg_x11, "d12")[-180],type='l',ylim=c(-25,25), ylab='', lwd=2)
par(new=TRUE)
plot(signal(dataeg_kfs5, "trend")$signal[-180],type='l', ylim=c(-25,25), ylab='',col=2, lwd=2)
par(new=TRUE)
plot(ma(signal(dataeg_kfs5, "trend", filtered = TRUE)$signal, order=180)[-1],type='l',ylim=c(-25,25), ylab='', lwd=2, col=3)
plot(series(dataeg_x11, "d12")[-180],type='l',ylim=c(-25,25), ylab='', lwd=2)
par(new=TRUE)
plot(signal(dataeg_kfs5, "trend")$signal[-180],type='l', ylim=c(-25,25), ylab='',col=2, lwd=2)
par(new=TRUE)
plot(ma(signal(dataeg_kfs5, "trend", filtered = TRUE)$signal, order=100)[-1],type='l',ylim=c(-25,25), ylab='', lwd=2, col=3)
plot(series(dataeg_x11, "d12")[-180],type='l',ylim=c(-25,25), ylab='', lwd=2)
par(new=TRUE)
plot(signal(dataeg_kfs5, "trend")$signal[-180],type='l', ylim=c(-25,25), ylab='',col=2, lwd=2)
par(new=TRUE)
plot(ma(signal(dataeg_kfs5, "trend", filtered = TRUE)$signal, order=5)[-1],type='l',ylim=c(-25,25), ylab='', lwd=2, col=3)
plot(dataeg - signal(dataeg_kfs5, "trend")$signal - signal(dataeg_kfs5, "seasonal")$signal - residuals(dataeg_kfs5, "recursive"))
plot(dataeg - signal(dataeg_kfs5, "trend", filtered = TRUE)$signal - signal(dataeg_kfs5, "seasonal", filtered = TRUE)$signal - residuals(dataeg_kfs5, "recursive"))
plot(series(dataeg_x11, "d11"))
plot(dataeg - signal(dataeg_kfs5, "seasonal", filtered = TRUE)$signal, ylab='', lwd=2, col=2)
plot(series(dataeg_x11, "d11"), ylim=c(-25,25), ylab='', lwd=2)
par(new=TRUE)
plot(dataeg - signal(dataeg_kfs5, "seasonal", filtered = TRUE)$signal, ylab='', lwd=2, col=2, ylim=c(-25,25))
plot(series(dataeg_x11, "d11"), ylim=c(-25,25), ylab='', lwd=2)
par(new=TRUE)
plot(dataeg - signal(dataeg_kfs5, "seasonal", filtered = TRUE)$signal, ylab='', lwd=2, col=2, ylim=c(-25,25))
par(new=TRUE)
plot(dataeg - signal(dataeg_kfs5, "seasonal")$signal, ylab='', lwd=2, col=2, ylim=c(-25,25))
plot(series(dataeg_x11, "d11"), ylim=c(-25,25), ylab='', lwd=2)
par(new=TRUE)
plot(dataeg - signal(dataeg_kfs5, "seasonal", filtered = TRUE)$signal, ylab='', lwd=2, col=2, ylim=c(-25,25))
par(new=TRUE)
plot(dataeg - signal(dataeg_kfs5, "seasonal")$signal, ylab='', lwd=2, col=4, ylim=c(-25,25))
plot(series(dataeg_x11, "d11"), ylim=c(-25,25), ylab='', lwd=2)
par(new=TRUE)
plot(dataeg - signal(dataeg_kfs5, "seasonal")$signal, ylab='', lwd=2, col=2, ylim=c(-25,25))
par(new=TRUE)
plot(dataeg - signal(dataeg_kfs5, "seasonal", filtered = TRUE)$signal, ylab='', lwd=2, col=4, ylim=c(-25,25))
plot(series(dataeg_x11, "d11"), ylim=c(-25,25), ylab='', lwd=2)
par(new=TRUE)
plot(dataeg - signal(dataeg_kfs5, "seasonal")$signal, ylab='', lwd=2, col=2, ylim=c(-25,25))
par(new=TRUE)
plot(dataeg - signal(dataeg_kfs5, "seasonal", filtered = TRUE)$signal, ylab='', lwd=2, col=4, ylim=c(-25,25))
plot(series(dataeg_x11, "d11"), ylim=c(-25,25), ylab='', lwd=2)
par(new=TRUE)
plot(dataeg - signal(dataeg_kfs5, "seasonal")$signal, ylab='', lwd=2, col=2, ylim=c(-25,25))
plot(series(dataeg_x11, 'd10'))
plot(series(dataeg_x11, 'd10'), ylim=c(-10,10), ylab='', lwd=2)
par(new=TRUE)
plot(signal(dataeg_kfs5, "seasonal")$signal, ylab='', lwd=2, col=2, ylim=c(-10,10))
par(new=TRUE)
plot(signal(dataeg_kfs5, "seasonal", filtered = TRUE)$signal, ylab='', lwd=2, col=4, ylim=c(-10,10))
plot(series(dataeg_x11, "d11"), ylim=c(-25,25), ylab='', lwd=2)
par(new=TRUE)
plot(dataeg - signal(dataeg_kfs5, "seasonal")$signal, ylab='', lwd=2, col=2, ylim=c(-25,25))
par(new=TRUE)
plot(dataeg - signal(dataeg_kfs5, "seasonal", filtered = TRUE)$signal, ylab='', lwd=2, col=4, ylim=c(-25,25))
# but apparently the smoothed version is better
par(mfrow=c(1,2))
plot(series(dataeg_x11, "d12"),ylim=c(-25,25), ylab='', lwd=2)
par(new=TRUE)
plot(signal(dataeg_kfs5, "trend")$signal, ylim=c(-25,25), ylab='',col=2, lwd=2)
par(new=TRUE)
plot(signal(dataeg_kfs5, "trend",filtered = TRUE)$signal, ylim=c(-25,25), ylab='',col=4, lwd=2)
legend('topleft',c('x11', 'smoothed', 'unsmoothed'), col=c(1,2,4), lty=1, bty='n')
title(main="no lag")
plot(series(dataeg_x11, "d12")[-180],type='l', ylim=c(-25,25), ylab='', lwd=2)
par(new=TRUE)
plot(signal(dataeg_kfs5, "trend")$signal[-180],type='l', ylim=c(-25,25), ylab='',col=2, lwd=2)
par(new=TRUE)
plot(signal(dataeg_kfs5, "trend", filtered = TRUE)$signal[-1], type = 'l', ylim=c(-25,25), ylab='', col=4, lwd=2)
legend('topleft', c('x11', 'smoothed', 'unsmoothed'), col=c(1,2,4), lty=1, bty='n')
title(main='lag1')
par(mfrow=c(1,1))
length(signal(dataeg_kfs5, "seasonal", filtered = TRUE)$signal)
length(signal(dataeg_kfs5, "trend", filtered = TRUE)$signal)
rm(list=ls())
y <- 3 sin(5*x) + 5 sin(x) + 7 cos(8*x)
x <- seq(0,20,0.01)
y <- 3 sin(5*x) + 5 sin(x) + 7 cos(8*x)
plot(y, type='l')
y <- 3*sin(5*x) + 5*sin(x) + 7*cos(8*x)
plot(y, type='l')
y <- 3*sin(5*x+3) + 5*sin(x-7) + 7*cos(8*x+9)
plot(y, type='l')
x <- seq(0,20,0.5)
y <- 3*sin(5*x+3) + 5*sin(x-7) + 7*cos(8*x+9)
plot(y, type='l')
x <- seq(0,120,1)
y <- 3*sin(5*x+3) + 5*sin(x-7) + 7*cos(8*x+9)
plot(y, type='l')
x <- seq(0,13,0.01)
y <- 3*sin(5*x+3) + 5*sin(x-7) + 7*cos(8*x+9)
plot(y, type='l')
x <- seq(0,10,0.01)
y <- 3*sin(5*x+3) + 5*sin(x-7) + 7*cos(8*x+9)
y <- 3*sin(5*x+3) + sin(x-7) + 0.5*cos(8*x+9)
plot(y, type='l')
y <- sin(x)
plot(y, type='l')
y <- sin(2x) + 1
plot(y, type='l')
y <- sin(2*x) + 1
plot(y, type='l')
y <- 1 + sin(2*x) +  0.5*cos(2*x)
plot(y, type='l')
y <- 1 + sin(2*x)
plot(y, type='l')
y <- 1 + sin(2*x) +  0.5*cos(2*x+2)
plot(y, type='l')
y <- 1 + sin(2*x) +  5*cos(2*x+2)
plot(y, type='l')
y <- 1 + sin(2*x) +  5*cos(0.5*x)
plot(y, type='l')
plot(y, xlim=c(0,10), type='l')
plot(y,  type='l')
plot(y,x, type='l')
plot(x, ytype='l')
plot(x, y,type='l')
y <- sin(2*x) +  5*cos(0.5*x)
plot(x, y,type='l')
?plot
?cex
??cex
plot(x, y,type='l', cex.axis=2)
plot(x, y,type='l', cex.axis=1.5)
plot(x, y,type='l', cex.axis=1.5, cex.names=1.5)
plot(x, y,type='l', cex.axis=1.5, cex.lab=1.5)
plot(x, y,type='l', cex.axis=1.5, cex.lab=1.5)
ï¼Ÿoptim
?optim
install.package('optimization')
install.packages('optimization')
hi <- function(x){(x[1]**2 + x[2] - 11)**2 + (x[1] + x[2]**2 -7)**2}
optim_nm(fun = hi, k = 2)
library(optimization)
hi <- function(x){(x[1]**2 + x[2] - 11)**2 + (x[1] + x[2]**2 -7)**2}
optim_nm(fun = hi, k = 2)
optim_sa(fun = hi, start = c(runif(2, min = -1, max = 1)),
trace = FALSE,
lower = c(-4, -4),
upper = c(4, 4),
control = list(dyn_rf = FALSE,
rf = 1.2,
t0 = 10,
nlimit = 100,
r = 0.6,
t_min = 0.1
)
)
##### Rosenbrock function
# minimum at f(1,1) = 0
ro <- function(x){
100*(x[2]-x[1]^2)^2+(1-x[1])^2
}
# Random start values. Example arguments for the relatively simple Rosenbrock function.
ro_sa <- optim_sa(fun = ro,
start = c(runif(2, min = -1, max = 1)),
lower = c(-5, -5),
upper = c(5, 5),
trace = TRUE,
control = list(t0 = 100,
nlimit = 550,
t_min = 0.1,
dyn_rf = FALSE,
rf = 1,
r = 0.7
)
)
# Visual inspection.
plot(ro_sa)
plot(ro_sa, type = "contour")
getwd()
LOSS <- function(sigma) {
x11 <- seas(data, x11='')
ssm <- SSModel(data ~ SSMtrend(1, Q=list(sigma[2])) + SSMseasonal(12, sea.type = 'dummy', Q=NA), H=sigma[1])
kfs <- KFS(ssm)
seasonal_x11 <- series(x11, "d10")
trend_x11 <- series(x11, "d12")
seasonal_kfs <- signal(kfs, "seasonal")$signal
trend_kfs <- signal(kfs, "trend")$signal
l <- sum((seasonal_x11-seasonal_kfs)^2) + sum((trend_x11-trend_kfs)^2) + sum((diff(trend_x11)-diff(trend_kfs))^2)
return(l)
}
data <- simlist[[1]]
optim_nm(LOSS, k=2)
library(seasonal)
library(KFAS)
library(doParallel)
library(dplyr)
library(ggplot2)
library(scales)
library(forecast)
optim_nm(LOSS, k=2)
optim_nm(LOSS, k=2)
optim_sa(fun = LOSS,
start = c(runif(2, min = 0, max = 1)),
lower = c(0, 0),
upper = c(1000, 1000),
trace = TRUE,
control = list(t0 = 100,
nlimit = 550,
t_min = 0.1,
dyn_rf = FALSE,
rf = 1,
r = 0.7
)
)
library(seasonal)
library(KFAS)
library(doParallel)
library(dplyr)
library(ggplot2)
library(scales)
library(forecast)
optim_sa(fun = LOSS,
start = c(runif(2, min = 0, max = 1)),
lower = c(0, 0),
upper = c(1000, 1000),
trace = TRUE,
control = list(t0 = 100,
nlimit = 550,
t_min = 0.1,
dyn_rf = FALSE,
rf = 1,
r = 0.7
)
)
ssm <- SSModel(data ~ SSMtrend(1, Q=list(sigma[2])) + SSMseasonal(12, sea.type = 'dummy', Q=1), H=sigma[1])
kfs <- KFS(ssm)
sigma <- c(runif(2, min = 0, max = 1))
ssm <- SSModel(data ~ SSMtrend(1, Q=list(sigma[2])) + SSMseasonal(12, sea.type = 'dummy', Q=1), H=sigma[1])
kfs <- KFS(ssm)
install.packages('dfoptim')
library(dfoptim)
nmkb(par=c(1,1), LOSS, lower=0, upper=1000)
optim_sa(fun = LOSS,
start = c(runif(2, min = 0, max = 1)),
lower = c(0, 0),
upper = c(1000, 1000),
)
optim_sa(fun = LOSS,
start = c(runif(2, min = 0, max = 1)),
lower = c(0, 0),
upper = c(1000, 1000)
)
optim(par = c(1,1),
fn = LOSS,
method = 'Nelder-Mead',
lower = 0,
upper = 1000)
optim(par = c(1,1),
fn = LOSS,
method = 'Nelder-Mead',
lower = 0.01,
upper = 1000)
rm(list = ls())
setwd('C:/Users/GuoLY/desktop/markdown/2020 Winter/masterthesis/file6')
load('.RData')
summary(error_pre)
library(seasonal)
library(KFAS)
library(doParallel)
library(dplyr)
library(ggplot2)
library(scales)
library(forecast)
cl <- makeCluster(detectCores())
clusterEvalQ(cl, {
library(seasonal)
library(KFAS)
})
clusterExport(cl, varlist = c('simlist'))
error_pre_1051  <- parSapply(cl, 701:1000, function(i){
dataeg <- simlist[[i]]
dataegshort <- window(dataeg, end=c(2013,12))
x11 <- seas(dataegshort, x11='', forecast.save='forecasts')
ssm <- SSModel(dataegshort ~ SSMtrend(1, Q=list(5)) + SSMseasonal(12, sea.type = 'dummy', Q=1), H=10)
kfs <- KFS(ssm)
############## model construction done ##############
prediction_true <- window(dataeg, start=c(2014,01))
prediction_1051 <- predict(ssm, n.ahead = 12, interval = 'prediction', level = .95)[,1]
error_1051 <- sum((prediction_true-prediction_1051)^2)
} )
stopCluster(cl)
error_pre <- cbind(error_pre, '1051' = error_pre_1051)
head(error_pre)
colnames(error_pre$error_pre_MLE1) <- MLE1
colnames(error_pre$error_pre_MLE1) <- 'MLE1'
colname(error_pre$error_pre_MLE1) <- 'MLE1'
?colnames
colnames(error_pre)[5] <- 'MLE1'
head(error_pre)
summary(error_pre)
plot(summary(error_pre))
#colnames(error_pre)[5] <- 'MLE1'
head(error_pre)
summary(error_pre)
cl <- makeCluster(detectCores())
clusterEvalQ(cl, {
library(seasonal)
library(KFAS)
})
clusterExport(cl, varlist = c('simlist'))
error_decomp_1051  <- parSapply(cl, simlist_14yrs, function(data){
x11 <- seas(data, x11='')
ssm <- SSModel(data ~ SSMtrend(1, Q=list(5)) + SSMseasonal(12, sea.type = 'dummy', Q=1), H=10)
kfs <- KFS(ssm)
L <- sum((series(x11, 'd12') - signal(kfs, 'trend')$signal)^2 + (series(x11, 'd10') - signal(kfs, 'seasonal')$signal)^2)
return('1051' = L)
})
stopCluster(cl)
error_decomp <- cbind(error_decomp, error_decomp_1051)
plot(density(error_decomp[,1]), col=2, ylim=c(0,0.005), xlim=c(0,1500), lwd=2, main='', xlab='')
par(new=TRUE)
plot(density(error_decomp[,2]), col=3, ylim=c(0,0.005), xlim=c(0,1500), lwd=2, main='', xlab='')
par(new=TRUE)
plot(density(error_decomp[,3]), col=4, ylim=c(0,0.005), xlim=c(0,1500), lwd=2, main='', xlab='')
par(new=TRUE)
plot(density(error_decomp[,4]), col=5, ylim=c(0,0.005), xlim=c(0,1500), lwd=2, main='', xlab='')
par(new=TRUE)
plot(density(error_decomp[,5]), col=6, ylim=c(0,0.005), xlim=c(0,1500), lwd=2, main='', xlab='')
title(main='Decomposition error comparison(X11 is standard)')
legend('topright', c('MLE_local level', 'MLE_local linear trend', 'LOSS', 'MAP','1051'), col=c(2,3,4,5,6), lty=1, lwd=2)
plot(density(error_pre[,1]), col=alpha(1,.5), ylim=c(0,0.0015), xlim=c(0,6000), lwd=2, main='', xlab='')
par(new=TRUE)
plot(density(error_pre[,2]), col=alpha(2,.5), ylim=c(0,0.0015), xlim=c(0,6000), lwd=2, main='', xlab='')
par(new=TRUE)
plot(density(error_pre[,5]), col=alpha(3,.5), ylim=c(0,0.0015), xlim=c(0,6000), lwd=2, main='', xlab='')
par(new=TRUE)
plot(density(error_pre[,4]), col=alpha(4,.5), ylim=c(0,0.0015), xlim=c(0,6000), lwd=2, main='', xlab='')
par(new=TRUE)
plot(density(error_pre[,3]), col=alpha(5,.5), ylim=c(0,0.0015), xlim=c(0,6000), lwd=2, main='', xlab='')
par(new=TRUE)
plot(density(error_pre[,6]), col=alpha(5,.5), ylim=c(0,0.0015), xlim=c(0,6000), lwd=2, main='', xlab='')
title(main='Prediction error comparison(X11 is standard)')
legend('topright', c('X-11','MLE_local level', 'MLE_local linear trend', 'LOSS', 'MAP','1051'), col=c(1,2,3,4,5), lty=1, lwd=2)
plot(density(error_pre[,1]), col=alpha(1,.5), ylim=c(0,0.0015), xlim=c(0,6000), lwd=2, main='', xlab='')
par(new=TRUE)
plot(density(error_pre[,2]), col=alpha(2,.5), ylim=c(0,0.0015), xlim=c(0,6000), lwd=2, main='', xlab='')
par(new=TRUE)
plot(density(error_pre[,5]), col=alpha(3,.5), ylim=c(0,0.0015), xlim=c(0,6000), lwd=2, main='', xlab='')
par(new=TRUE)
plot(density(error_pre[,4]), col=alpha(4,.5), ylim=c(0,0.0015), xlim=c(0,6000), lwd=2, main='', xlab='')
par(new=TRUE)
plot(density(error_pre[,3]), col=alpha(5,.5), ylim=c(0,0.0015), xlim=c(0,6000), lwd=2, main='', xlab='')
par(new=TRUE)
plot(density(error_pre[,6]), col=alpha(6,.5), ylim=c(0,0.0015), xlim=c(0,6000), lwd=2, main='', xlab='')
title(main='Prediction error comparison(X11 is standard)')
legend('topright', c('X-11','MLE_local level', 'MLE_local linear trend', 'LOSS', 'MAP','1051'), col=c(1,2,3,4,5), lty=1, lwd=2)
plot(density(error_pre[,1]), col=alpha(1,.5), ylim=c(0,0.0015), xlim=c(0,6000), lwd=2, main='', xlab='')
par(new=TRUE)
plot(density(error_pre[,2]), col=alpha(2,.5), ylim=c(0,0.0015), xlim=c(0,6000), lwd=2, main='', xlab='')
par(new=TRUE)
plot(density(error_pre[,5]), col=alpha(3,.5), ylim=c(0,0.0015), xlim=c(0,6000), lwd=2, main='', xlab='')
par(new=TRUE)
plot(density(error_pre[,4]), col=alpha(4,.5), ylim=c(0,0.0015), xlim=c(0,6000), lwd=2, main='', xlab='')
par(new=TRUE)
plot(density(error_pre[,3]), col=alpha(5,.5), ylim=c(0,0.0015), xlim=c(0,6000), lwd=2, main='', xlab='')
par(new=TRUE)
plot(density(error_pre[,6]), col=alpha(6,.5), ylim=c(0,0.0015), xlim=c(0,6000), lwd=2, main='', xlab='')
title(main='Prediction error comparison(X11 is standard)')
legend('topright', c('X-11','MLE_local level', 'MLE_local linear trend', 'LOSS', 'MAP','1051'), col=c(1,2,3,4,5,6), lty=1, lwd=2)
plot(density(error_decomp$Loss0 - error_decomp$error_decomp_map))
plot(density(error_decomp$Loss0 - error_decomp$error_decomp_map),col=1, lwd=2, xlab='', main='')
plot(density(error_decomp$error_ide - error_decomp$error_decomp_1051),col=2, lwd=2, xlab='', main='')
abline(v=0)
plot(density(error_decomp$Loss0 - error_decomp$error_decomp_map),col=1, lwd=2, xlab='', main='')
abline(v=0)
plot(density(error_decomp$Loss0 - error_decomp$error_decomp_map),col=1, lwd=2, xlab='', main='',ylim=c(0,.009), xlim=c(-300,300))
par(new=TRUE)
plot(density(error_decomp$error_ide - error_decomp$error_decomp_1051),col=2, lwd=2, xlab='', main='',ylim=c(0,.009), xlim=c(-300,300))
abline(v=0)
legend('topleft', c('MLE_LL-MAP', 'IDE-1051'), col=c(1,2), lwd=2)
plot(density(error_decomp$Loss0 - error_decomp$error_decomp_map),col=1, lwd=2, xlab='', main='',ylim=c(0,.01), xlim=c(-300,300))
par(new=TRUE)
plot(density(error_decomp$error_ide - error_decomp$error_decomp_1051),col=2, lwd=2, xlab='', main='',ylim=c(0,.01), xlim=c(-300,300))
abline(v=0)
legend('topleft', c('MLE_LL-MAP', 'IDE-1051'), col=c(1,2), lwd=2)
plot(density(error_decomp$Loss0 - error_decomp$error_decomp_map),col=1, lwd=2, xlab='', main='',ylim=c(0,.01), xlim=c(-300,300))
par(new=TRUE)
plot(density(error_decomp$error_ide - error_decomp$error_decomp_1051),col=2, lwd=2, xlab='', main='',ylim=c(0,.01), xlim=c(-300,300))
par(new=TRUE)
plot(density(error_decomp$error_ide - error_decomp$error_decomp_map), col=3, lwd=2, xlab='', main='',ylim=c(0,.01), xlim=c(-300,300))
abline(v=0)
legend('topleft', c('MLE_LL - MAP', 'GOOD - 1051', 'GOOD - MAP'), col=c(1,2,3), lwd=2)
plot(density(error_decomp$error_ide - error_decomp$error_decomp_map), col=3, lwd=2, xlab='', main='', xlim=c(-300,300))
plot(density(error_decomp$Loss0 - error_decomp$error_decomp_map),col=1, lwd=2, xlab='', main='',ylim=c(0,.03), xlim=c(-300,300))
par(new=TRUE)
plot(density(error_decomp$error_ide - error_decomp$error_decomp_1051),col=2, lwd=2, xlab='', main='',ylim=c(0,.03), xlim=c(-300,300))
par(new=TRUE)
plot(density(error_decomp$error_ide - error_decomp$error_decomp_map), col=3, lwd=2, xlab='', main='',ylim=c(0,.03), xlim=c(-300,300))
abline(v=0)
legend('topleft', c('MLE_LL - MAP', 'GOOD - 1051', 'GOOD - MAP'), col=c(1,2,3), lwd=2)
plot(density(error_pre$MLE - error_pre$MAP), col=1, lwd=2, main='', xlab='')
plot(density(error_pre$MLE - error_pre$MAP), col=1, lwd=2, main='', xlab='', ylim=c(0,.02), xlim=c(-300,300))
abline(v=0)
abline(v=0, col='red')
plot(density(error_pre$MLE - error_pre$MAP), col=1, lwd=2, main='', xlab='', ylim=c(0,.02), xlim=c(-300,300))
par(new=TRUE)
plot(density(error_pre$`1051` - error_pre$LOSS), col=2, lwd=2, main='', xlab='', ylim=c(0,.02), xlim=c(-300,300))
abline(v=0, col='red')
legend('topleft', c('MLE - MAP', '1051 - LOSS', 'LOSS - MAP'), col=c(1,2,3), lwd=2)
abline(v=0)
plot(density(error_decomp$Loss0 - error_decomp$error_decomp_map),col=1, lwd=2, xlab='', main='',ylim=c(0,.03), xlim=c(-300,300))
par(new=TRUE)
plot(density(error_decomp$error_ide - error_decomp$error_decomp_1051),col=2, lwd=2, xlab='', main='',ylim=c(0,.03), xlim=c(-300,300))
#par(new=TRUE)
#plot(density(error_decomp$error_ide - error_decomp$error_decomp_map), col=3, lwd=2, xlab='', main='',ylim=c(0,.03), xlim=c(-300,300))
abline(v=0)
legend('topleft', c('MLE - MAP', '1051 - LOSS'), col=c(1,2), lwd=2)
plot(density(error_decomp$Loss0 - error_decomp$error_decomp_map),col=1, lwd=2, xlab='', main='',ylim=c(0,.01), xlim=c(-300,300))
par(new=TRUE)
plot(density(error_decomp$error_ide - error_decomp$error_decomp_1051),col=2, lwd=2, xlab='', main='',ylim=c(0,.01), xlim=c(-300,300))
#par(new=TRUE)
#plot(density(error_decomp$error_ide - error_decomp$error_decomp_map), col=3, lwd=2, xlab='', main='',ylim=c(0,.03), xlim=c(-300,300))
abline(v=0)
legend('topleft', c('MLE - MAP', '1051 - LOSS'), col=c(1,2), lwd=2)
title(main='dist of difference between various errors')
title(main='Dist of difference between various errors')
plot(density(error_decomp$Loss0 - error_decomp$error_decomp_map),col=1, lwd=2, xlab='', main='',ylim=c(0,.01), xlim=c(-300,300))
par(new=TRUE)
plot(density(error_decomp$error_ide - error_decomp$error_decomp_1051),col=2, lwd=2, xlab='', main='',ylim=c(0,.01), xlim=c(-300,300))
#par(new=TRUE)
#plot(density(error_decomp$error_ide - error_decomp$error_decomp_map), col=3, lwd=2, xlab='', main='',ylim=c(0,.03), xlim=c(-300,300))
abline(v=0)
title(main='Dist of difference between various errors')
legend('topleft', c('MLE - MAP', '1051 - LOSS'), col=c(1,2), lwd=2)
plot(density(error_decomp$Loss0 - error_decomp$error_decomp_map),col=1, lwd=2, xlab='', main='',ylim=c(0,.01), xlim=c(-300,300))
par(new=TRUE)
plot(density(error_decomp$error_ide - error_decomp$error_decomp_1051),col=2, lwd=2, xlab='', main='',ylim=c(0,.01), xlim=c(-300,300))
#par(new=TRUE)
#plot(density(error_decomp$error_ide - error_decomp$error_decomp_map), col=3, lwd=2, xlab='', main='',ylim=c(0,.03), xlim=c(-300,300))
abline(v=0)
title(main='Dist of difference between various decomposition errors')
legend('topleft', c('MLE - MAP', '1051 - LOSS'), col=c(1,2), lwd=2)
plot(density(error_pre$MLE - error_pre$MAP), col=1, lwd=2, main='', xlab='', ylim=c(0,.02), xlim=c(-300,300))
par(new=TRUE)
plot(density(error_pre$`1051` - error_pre$LOSS), col=2, lwd=2, main='', xlab='', ylim=c(0,.02), xlim=c(-300,300))
abline(v=0)
title(main='Dist of difference between various prediction errors')
legend('topleft', c('MLE - MAP', '1051 - LOSS'), col=c(1,2), lwd=2)
#######################################################################################
install.packages('extraDistr')
#######################################################################################
#install.packages('extraDistr')
library(extraDistr)
plot(prior1)
plot(prior2)
plot(prior1)
x <- seq(0,30,0.1)
x <- seq(0,30,0.1)
y <- dhcauchy(x, sigma = 10)
plot(x=x, y=y, type='l')
