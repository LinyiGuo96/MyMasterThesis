plot(series(dataeg_x11, "d12"),ylim=c(-5,40), ylab='', lwd=2)
par(new=TRUE)
plot(signal(dataeg_kfs5, "trend")$signal, ylim=c(-5,40), ylab='',col=2, lwd=2)
par(new=TRUE)
plot(signal(dataeg_kfs5, "trend",filtered = TRUE)$signal, ylim=c(-5,40), ylab='',col=4, lwd=2)
legend(x=2010, y=0,c('x11', 'smoothed', 'unsmoothed'), col=c(1,2,4), lty=1, bty='n')
title(main="no lag")
plot(series(dataeg_x11, "d12")[-180],type='l', ylim=c(-5,40), ylab='', lwd=2)
par(new=TRUE)
plot(signal(dataeg_kfs5, "trend")$signal[-180],type='l', ylim=c(-5,40), ylab='',col=2, lwd=2)
par(new=TRUE)
plot(signal(dataeg_kfs5, "trend", filtered = TRUE)$signal[-1], type = 'l', ylim=c(-5,40), ylab='', col=4, lwd=2)
legend(x=110, y=0, c('x11', 'smoothed', 'unsmoothed'), col=c(1,2,4), lty=1, bty='n')
title(main='lag1')
par(mfrow=c(1,1))
par(mfrow=c(1,2))
plot(series(dataeg_x11, "d12"),ylim=c(-5,40), ylab='', lwd=2)
par(new=TRUE)
plot(signal(dataeg_kfs5, "trend")$signal, ylim=c(-5,40), ylab='',col=2, lwd=2)
par(new=TRUE)
plot(signal(dataeg_kfs5, "trend",filtered = TRUE)$signal, ylim=c(-5,40), ylab='',col=4, lwd=2)
legend('topleft',c('x11', 'smoothed', 'unsmoothed'), col=c(1,2,4), lty=1, bty='n')
title(main="no lag")
plot(series(dataeg_x11, "d12")[-180],type='l', ylim=c(-5,40), ylab='', lwd=2)
par(new=TRUE)
plot(signal(dataeg_kfs5, "trend")$signal[-180],type='l', ylim=c(-5,40), ylab='',col=2, lwd=2)
par(new=TRUE)
plot(signal(dataeg_kfs5, "trend", filtered = TRUE)$signal[-1], type = 'l', ylim=c(-5,40), ylab='', col=4, lwd=2)
legend('topleft', c('x11', 'smoothed', 'unsmoothed'), col=c(1,2,4), lty=1, bty='n')
title(main='lag1')
par(mfrow=c(1,1))
# check other data
dataeg <- simlist[[213]]
dataeg_x11 <- seas(dataeg, x11='')
dataeg_ssm0 <- SSModel(dataeg ~ SSMtrend(1, Q=list(NA)) + SSMseasonal(12, sea.type = 'dummy', Q=NA), H=NA)
dataeg_fit0 <- fitSSM(dataeg_ssm0, inits = c(1,1,1))
dataeg_kfs0 <- KFS(dataeg_fit0$model)
plot(series(dataeg_x11, "d12"), ylab='', lwd=2)
plot(series(dataeg_x11, "d12"),ylim=c(-25,50), ylab='', lwd=2)
par(new=TRUE)
plot(signal(dataeg_kfs0, "trend")$signal, ylim=c(-25,50), ylab='',col=2, lwd=2)
par(new=TRUE)
plot(signal(dataeg_kfs0, "trend",filtered = TRUE)$signal, ylim=c(-25,50), ylab='',col=4, lwd=2)
plot(series(dataeg_x11, "d12")[-180],type='l', ylim=c(-25,50), ylab='', lwd=2)
par(new=TRUE)
plot(signal(dataeg_kfs0, "trend")$signal[-180],type='l', ylim=c(-25,50), ylab='',col=2, lwd=2)
par(new=TRUE)
plot(signal(dataeg_kfs0, "trend", filtered = TRUE)$signal[-1], type = 'l', ylim=c(-25,50), ylab='', col=4, lwd=2)
library(doParallel)
system.time({
cl <- detectCores()
cl <- makeCluster(cl)
registerDoParallel(cl)
clusterExport(cl, c("loss5"))
lossmat5  <- foreach (i = 1:200, .combine = "rbind", .packages = c("KFAS","seasonal")) %:%
foreach(j = 1:200, .combine = "rbind") %dopar% {
dataeg_ssm <- SSModel(dataeg ~ SSMtrend(1, Q=list(j*0.1)) + SSMseasonal(12, sea.type = 'dummy', Q=1), H=i*0.1)
dataeg_kfs <- KFS(dataeg_ssm)
l <- loss5(dataeg_x11, dataeg_kfs)
c(i*0.1, j*0.1, l)
}
stopCluster(cl)
})
lossmat5[which.min(lossmat5[,3]),]
dataeg_ssm5 <- SSModel(dataeg ~ SSMtrend(1, Q=list(2)) + SSMseasonal(12, sea.type = 'dummy', Q=1), H=7.9)
dataeg_kfs5 <- KFS(dataeg_ssm5)
par(mfrow=c(1,2))
plot(series(dataeg_x11, "d12"),ylim=c(-25,50), ylab='', lwd=2)
par(new=TRUE)
plot(signal(dataeg_kfs5, "trend")$signal, ylim=c(-25,50), ylab='',col=2, lwd=2)
par(new=TRUE)
plot(signal(dataeg_kfs5, "trend",filtered = TRUE)$signal, ylim=c(-25,50), ylab='',col=4, lwd=2)
legend('topleft',c('x11', 'smoothed', 'unsmoothed'), col=c(1,2,4), lty=1, bty='n')
title(main="no lag")
plot(series(dataeg_x11, "d12")[-180],type='l', ylim=c(-25,50), ylab='', lwd=2)
par(new=TRUE)
plot(signal(dataeg_kfs5, "trend")$signal[-180],type='l', ylim=c(-25,50), ylab='',col=2, lwd=2)
par(new=TRUE)
plot(signal(dataeg_kfs5, "trend", filtered = TRUE)$signal[-1], type = 'l', ylim=c(-25,50), ylab='', col=4, lwd=2)
legend('topleft', c('x11', 'smoothed', 'unsmoothed'), col=c(1,2,4), lty=1, bty='n')
title(main='lag1')
par(mfrow=c(1,1))
dataeg <- simlist[[521]]
dataeg_x11 <- seas(dataeg, x11='')
dataeg_ssm0 <- SSModel(dataeg ~ SSMtrend(1, Q=list(NA)) + SSMseasonal(12, sea.type = 'dummy', Q=NA), H=NA)
dataeg_fit0 <- fitSSM(dataeg_ssm0, inits = c(1,1,1))
dataeg_kfs0 <- KFS(dataeg_fit0$model)
plot(series(dataeg_x11, "d12"),ylim=c(-25,50), ylab='', lwd=2)
par(new=TRUE)
plot(signal(dataeg_kfs0, "trend")$signal, ylim=c(-25,50), ylab='',col=2, lwd=2)
par(new=TRUE)
plot(signal(dataeg_kfs0, "trend",filtered = TRUE)$signal, ylim=c(-25,50), ylab='',col=4, lwd=2)
library(seasonal)
library(KFAS)
# check other data
dataeg <- simlist[[521]]
dataeg_x11 <- seas(dataeg, x11='')
dataeg_ssm0 <- SSModel(dataeg ~ SSMtrend(1, Q=list(NA)) + SSMseasonal(12, sea.type = 'dummy', Q=NA), H=NA)
dataeg_fit0 <- fitSSM(dataeg_ssm0, inits = c(1,1,1))
dataeg_kfs0 <- KFS(dataeg_fit0$model)
plot(series(dataeg_x11, "d12"),ylim=c(-25,50), ylab='', lwd=2)
par(new=TRUE)
plot(signal(dataeg_kfs0, "trend")$signal, ylim=c(-25,50), ylab='',col=2, lwd=2)
par(new=TRUE)
plot(signal(dataeg_kfs0, "trend",filtered = TRUE)$signal, ylim=c(-25,50), ylab='',col=4, lwd=2)
plot(series(dataeg_x11, "d12"),ylim=c(-25,25), ylab='', lwd=2)
par(new=TRUE)
plot(signal(dataeg_kfs0, "trend")$signal, ylim=c(-25,25), ylab='',col=2, lwd=2)
par(new=TRUE)
plot(signal(dataeg_kfs0, "trend",filtered = TRUE)$signal, ylim=c(-25,25), ylab='',col=4, lwd=2)
plot(series(dataeg_x11, "d12")[-180],type='l', ylim=c(-25,25), ylab='', lwd=2)
par(new=TRUE)
plot(signal(dataeg_kfs0, "trend")$signal[-180],type='l', ylim=c(-25,25), ylab='',col=2, lwd=2)
par(new=TRUE)
plot(signal(dataeg_kfs0, "trend", filtered = TRUE)$signal[-1], type = 'l', ylim=c(-25,25), ylab='', col=4, lwd=2)
library(doParallel)
system.time({
cl <- detectCores()
cl <- makeCluster(cl)
registerDoParallel(cl)
clusterExport(cl, c("loss5"))
lossmat5  <- foreach (i = 1:200, .combine = "rbind", .packages = c("KFAS","seasonal")) %:%
foreach(j = 1:200, .combine = "rbind") %dopar% {
dataeg_ssm <- SSModel(dataeg ~ SSMtrend(1, Q=list(j*0.1)) + SSMseasonal(12, sea.type = 'dummy', Q=1), H=i*0.1)
dataeg_kfs <- KFS(dataeg_ssm)
l <- loss5(dataeg_x11, dataeg_kfs)
c(i*0.1, j*0.1, l)
}
stopCluster(cl)
})
lossmat5[which.min(lossmat5[,3]),]
dataeg_ssm5 <- SSModel(dataeg ~ SSMtrend(1, Q=list(1.4)) + SSMseasonal(12, sea.type = 'dummy', Q=1), H=4.6)
dataeg_kfs5 <- KFS(dataeg_ssm5)
par(mfrow=c(1,2))
plot(series(dataeg_x11, "d12"),ylim=c(-25,25), ylab='', lwd=2)
par(new=TRUE)
plot(signal(dataeg_kfs5, "trend")$signal, ylim=c(-25,25), ylab='',col=2, lwd=2)
par(new=TRUE)
plot(signal(dataeg_kfs5, "trend",filtered = TRUE)$signal, ylim=c(-25,25), ylab='',col=4, lwd=2)
legend('topleft',c('x11', 'smoothed', 'unsmoothed'), col=c(1,2,4), lty=1, bty='n')
title(main="no lag")
plot(series(dataeg_x11, "d12")[-180],type='l', ylim=c(-25,25), ylab='', lwd=2)
par(new=TRUE)
plot(signal(dataeg_kfs5, "trend")$signal[-180],type='l', ylim=c(-25,25), ylab='',col=2, lwd=2)
par(new=TRUE)
plot(signal(dataeg_kfs5, "trend", filtered = TRUE)$signal[-1], type = 'l', ylim=c(-25,25), ylab='', col=4, lwd=2)
legend('topleft', c('x11', 'smoothed', 'unsmoothed'), col=c(1,2,4), lty=1, bty='n')
title(main='lag1')
par(mfrow=c(1,1))
？signal
signal
?signal
library(KFAS)
library(seasonal)
？library
?signal
View(loss5)
dataeg_ssm0 <- SSModel(dataeg ~ SSMtrend(1, Q=list(NA)) + SSMseasonal(12, sea.type = 'dummy', Q=NA), H=NA)
dataeg_fit0 <- fitSSM(dataeg_ssm0, inits = c(1,1,1))
dataeg_kfs0 <- KFS(dataeg_fit0$model)
plot(series(dataeg_x11, "d12"),ylim=c(-25,25), ylab='', lwd=2)
par(new=TRUE)
plot(signal(dataeg_kfs0, "trend")$signal, ylim=c(-25,25), ylab='',col=2, lwd=2)
par(new=TRUE)
plot(signal(dataeg_kfs0, "trend",filtered = TRUE)$signal, ylim=c(-25,25), ylab='',col=4, lwd=2)
plot(series(dataeg_x11, "d12")[-180],type='l', ylim=c(-25,25), ylab='', lwd=2)
par(new=TRUE)
plot(signal(dataeg_kfs0, "trend")$signal[-180],type='l', ylim=c(-25,25), ylab='',col=2, lwd=2)
par(new=TRUE)
plot(signal(dataeg_kfs0, "trend", filtered = TRUE)$signal[-1], type = 'l', ylim=c(-25,25), ylab='', col=4, lwd=2)
?ma
??ma
#####################################################################################
library(ma)
#####################################################################################
library(forecast)
?ma
plot(ma(signal(dataeg_kfs5, "trend", filtered = TRUE)$signal[-1], order=5))
length(ma(signal(dataeg_kfs5, "trend", filtered = TRUE)$signal[-1], order=5))
length(ma(signal(dataeg_kfs5, "trend", filtered = TRUE)$signal, order=5))
plot(series(dataeg_x11, "d12"),ylim=c(-25,25), ylab='', lwd=2)
par(new=TRUE)
plot(ma(signal(dataeg_kfs5, "trend", filtered = TRUE)$signal, order=5))
plot(series(dataeg_x11, "d12"),ylim=c(-25,25), ylab='', lwd=2)
par(new=TRUE)
plot(ma(signal(dataeg_kfs5, "trend", filtered = TRUE)$signal, order=5),ylim=c(-25,25), ylab='', lwd=2, col=2)
plot(series(dataeg_x11, "d12")[-180],ylim=c(-25,25), ylab='', lwd=2)
par(new=TRUE)
plot(ma(signal(dataeg_kfs5, "trend", filtered = TRUE)$signal[-1], order=5),ylim=c(-25,25), ylab='', lwd=2, col=2)
plot(series(dataeg_x11, "d12")[-180],type='l',ylim=c(-25,25), ylab='', lwd=2)
par(new=TRUE)
plot(ma(signal(dataeg_kfs5, "trend", filtered = TRUE)$signal[-1], order=5),ylim=c(-25,25), ylab='', lwd=2, col=2)
plot(series(dataeg_x11, "d12")[-180],type='l',ylim=c(-25,25), ylab='', lwd=2)
par(new=TRUE)
plot(signal(dataeg_kfs5, "trend")$signal[-180],type='l', ylim=c(-25,25), ylab='',col=2, lwd=2)
par(new=TRUE)
plot(ma(signal(dataeg_kfs5, "trend", filtered = TRUE)$signal[-1], order=5),ylim=c(-25,25), ylab='', lwd=2, col=6)
plot(series(dataeg_x11, "d12")[-180],type='l',ylim=c(-25,25), ylab='', lwd=2)
par(new=TRUE)
plot(signal(dataeg_kfs5, "trend")$signal[-180],type='l', ylim=c(-25,25), ylab='',col=2, lwd=2)
par(new=TRUE)
plot(ma(signal(dataeg_kfs5, "trend", filtered = TRUE)$signal[-1], order=5),ylim=c(-25,25), ylab='', lwd=2, col=2)
plot(series(dataeg_x11, "d12")[-180],type='l',ylim=c(-25,25), ylab='', lwd=2)
par(new=TRUE)
plot(signal(dataeg_kfs5, "trend")$signal[-180],type='l', ylim=c(-25,25), ylab='',col=2, lwd=2)
par(new=TRUE)
plot(ma(signal(dataeg_kfs5, "trend", filtered = TRUE)$signal[-1], order=5),ylim=c(-25,25), ylab='', lwd=2, col=3)
plot(series(dataeg_x11, "d12")[-180],type='l',ylim=c(-25,25), ylab='', lwd=2)
par(new=TRUE)
plot(signal(dataeg_kfs5, "trend")$signal[-180],type='l', ylim=c(-25,25), ylab='',col=2, lwd=2)
par(new=TRUE)
plot(ma(signal(dataeg_kfs5, "trend", filtered = TRUE)$signal, order=5)[-1],ylim=c(-25,25), ylab='', lwd=2, col=3)
plot(series(dataeg_x11, "d12")[-180],type='l',ylim=c(-25,25), ylab='', lwd=2)
par(new=TRUE)
plot(signal(dataeg_kfs5, "trend")$signal[-180],type='l', ylim=c(-25,25), ylab='',col=2, lwd=2)
par(new=TRUE)
plot(ma(signal(dataeg_kfs5, "trend", filtered = TRUE)$signal, order=5)[-1],type='l',ylim=c(-25,25), ylab='', lwd=2, col=3)
plot(series(dataeg_x11, "d12")[-180],type='l',ylim=c(-25,25), ylab='', lwd=2)
par(new=TRUE)
plot(signal(dataeg_kfs5, "trend")$signal[-180],type='l', ylim=c(-25,25), ylab='',col=2, lwd=2)
par(new=TRUE)
plot(ma(signal(dataeg_kfs5, "trend", filtered = TRUE)$signal, order=3)[-1],type='l',ylim=c(-25,25), ylab='', lwd=2, col=3)
plot(series(dataeg_x11, "d12")[-180],type='l',ylim=c(-25,25), ylab='', lwd=2)
par(new=TRUE)
plot(signal(dataeg_kfs5, "trend")$signal[-180],type='l', ylim=c(-25,25), ylab='',col=2, lwd=2)
par(new=TRUE)
plot(ma(signal(dataeg_kfs5, "trend", filtered = TRUE)$signal, order=7)[-1],type='l',ylim=c(-25,25), ylab='', lwd=2, col=3)
plot(series(dataeg_x11, "d12")[-180],type='l',ylim=c(-25,25), ylab='', lwd=2)
par(new=TRUE)
plot(signal(dataeg_kfs5, "trend")$signal[-180],type='l', ylim=c(-25,25), ylab='',col=2, lwd=2)
par(new=TRUE)
plot(ma(signal(dataeg_kfs5, "trend", filtered = TRUE)$signal, order=180)[-1],type='l',ylim=c(-25,25), ylab='', lwd=2, col=3)
plot(series(dataeg_x11, "d12")[-180],type='l',ylim=c(-25,25), ylab='', lwd=2)
par(new=TRUE)
plot(signal(dataeg_kfs5, "trend")$signal[-180],type='l', ylim=c(-25,25), ylab='',col=2, lwd=2)
par(new=TRUE)
plot(ma(signal(dataeg_kfs5, "trend", filtered = TRUE)$signal, order=100)[-1],type='l',ylim=c(-25,25), ylab='', lwd=2, col=3)
plot(series(dataeg_x11, "d12")[-180],type='l',ylim=c(-25,25), ylab='', lwd=2)
par(new=TRUE)
plot(signal(dataeg_kfs5, "trend")$signal[-180],type='l', ylim=c(-25,25), ylab='',col=2, lwd=2)
par(new=TRUE)
plot(ma(signal(dataeg_kfs5, "trend", filtered = TRUE)$signal, order=5)[-1],type='l',ylim=c(-25,25), ylab='', lwd=2, col=3)
plot(dataeg - signal(dataeg_kfs5, "trend")$signal - signal(dataeg_kfs5, "seasonal")$signal - residuals(dataeg_kfs5, "recursive"))
plot(dataeg - signal(dataeg_kfs5, "trend", filtered = TRUE)$signal - signal(dataeg_kfs5, "seasonal", filtered = TRUE)$signal - residuals(dataeg_kfs5, "recursive"))
plot(series(dataeg_x11, "d11"))
plot(dataeg - signal(dataeg_kfs5, "seasonal", filtered = TRUE)$signal, ylab='', lwd=2, col=2)
plot(series(dataeg_x11, "d11"), ylim=c(-25,25), ylab='', lwd=2)
par(new=TRUE)
plot(dataeg - signal(dataeg_kfs5, "seasonal", filtered = TRUE)$signal, ylab='', lwd=2, col=2, ylim=c(-25,25))
plot(series(dataeg_x11, "d11"), ylim=c(-25,25), ylab='', lwd=2)
par(new=TRUE)
plot(dataeg - signal(dataeg_kfs5, "seasonal", filtered = TRUE)$signal, ylab='', lwd=2, col=2, ylim=c(-25,25))
par(new=TRUE)
plot(dataeg - signal(dataeg_kfs5, "seasonal")$signal, ylab='', lwd=2, col=2, ylim=c(-25,25))
plot(series(dataeg_x11, "d11"), ylim=c(-25,25), ylab='', lwd=2)
par(new=TRUE)
plot(dataeg - signal(dataeg_kfs5, "seasonal", filtered = TRUE)$signal, ylab='', lwd=2, col=2, ylim=c(-25,25))
par(new=TRUE)
plot(dataeg - signal(dataeg_kfs5, "seasonal")$signal, ylab='', lwd=2, col=4, ylim=c(-25,25))
plot(series(dataeg_x11, "d11"), ylim=c(-25,25), ylab='', lwd=2)
par(new=TRUE)
plot(dataeg - signal(dataeg_kfs5, "seasonal")$signal, ylab='', lwd=2, col=2, ylim=c(-25,25))
par(new=TRUE)
plot(dataeg - signal(dataeg_kfs5, "seasonal", filtered = TRUE)$signal, ylab='', lwd=2, col=4, ylim=c(-25,25))
plot(series(dataeg_x11, "d11"), ylim=c(-25,25), ylab='', lwd=2)
par(new=TRUE)
plot(dataeg - signal(dataeg_kfs5, "seasonal")$signal, ylab='', lwd=2, col=2, ylim=c(-25,25))
par(new=TRUE)
plot(dataeg - signal(dataeg_kfs5, "seasonal", filtered = TRUE)$signal, ylab='', lwd=2, col=4, ylim=c(-25,25))
plot(series(dataeg_x11, "d11"), ylim=c(-25,25), ylab='', lwd=2)
par(new=TRUE)
plot(dataeg - signal(dataeg_kfs5, "seasonal")$signal, ylab='', lwd=2, col=2, ylim=c(-25,25))
plot(series(dataeg_x11, 'd10'))
plot(series(dataeg_x11, 'd10'), ylim=c(-10,10), ylab='', lwd=2)
par(new=TRUE)
plot(signal(dataeg_kfs5, "seasonal")$signal, ylab='', lwd=2, col=2, ylim=c(-10,10))
par(new=TRUE)
plot(signal(dataeg_kfs5, "seasonal", filtered = TRUE)$signal, ylab='', lwd=2, col=4, ylim=c(-10,10))
plot(series(dataeg_x11, "d11"), ylim=c(-25,25), ylab='', lwd=2)
par(new=TRUE)
plot(dataeg - signal(dataeg_kfs5, "seasonal")$signal, ylab='', lwd=2, col=2, ylim=c(-25,25))
par(new=TRUE)
plot(dataeg - signal(dataeg_kfs5, "seasonal", filtered = TRUE)$signal, ylab='', lwd=2, col=4, ylim=c(-25,25))
# but apparently the smoothed version is better
par(mfrow=c(1,2))
plot(series(dataeg_x11, "d12"),ylim=c(-25,25), ylab='', lwd=2)
par(new=TRUE)
plot(signal(dataeg_kfs5, "trend")$signal, ylim=c(-25,25), ylab='',col=2, lwd=2)
par(new=TRUE)
plot(signal(dataeg_kfs5, "trend",filtered = TRUE)$signal, ylim=c(-25,25), ylab='',col=4, lwd=2)
legend('topleft',c('x11', 'smoothed', 'unsmoothed'), col=c(1,2,4), lty=1, bty='n')
title(main="no lag")
plot(series(dataeg_x11, "d12")[-180],type='l', ylim=c(-25,25), ylab='', lwd=2)
par(new=TRUE)
plot(signal(dataeg_kfs5, "trend")$signal[-180],type='l', ylim=c(-25,25), ylab='',col=2, lwd=2)
par(new=TRUE)
plot(signal(dataeg_kfs5, "trend", filtered = TRUE)$signal[-1], type = 'l', ylim=c(-25,25), ylab='', col=4, lwd=2)
legend('topleft', c('x11', 'smoothed', 'unsmoothed'), col=c(1,2,4), lty=1, bty='n')
title(main='lag1')
par(mfrow=c(1,1))
length(signal(dataeg_kfs5, "seasonal", filtered = TRUE)$signal)
length(signal(dataeg_kfs5, "trend", filtered = TRUE)$signal)
rm(list=ls())
y <- 3 sin(5*x) + 5 sin(x) + 7 cos(8*x)
x <- seq(0,20,0.01)
y <- 3 sin(5*x) + 5 sin(x) + 7 cos(8*x)
plot(y, type='l')
y <- 3*sin(5*x) + 5*sin(x) + 7*cos(8*x)
plot(y, type='l')
y <- 3*sin(5*x+3) + 5*sin(x-7) + 7*cos(8*x+9)
plot(y, type='l')
x <- seq(0,20,0.5)
y <- 3*sin(5*x+3) + 5*sin(x-7) + 7*cos(8*x+9)
plot(y, type='l')
x <- seq(0,120,1)
y <- 3*sin(5*x+3) + 5*sin(x-7) + 7*cos(8*x+9)
plot(y, type='l')
x <- seq(0,13,0.01)
y <- 3*sin(5*x+3) + 5*sin(x-7) + 7*cos(8*x+9)
plot(y, type='l')
x <- seq(0,10,0.01)
y <- 3*sin(5*x+3) + 5*sin(x-7) + 7*cos(8*x+9)
y <- 3*sin(5*x+3) + sin(x-7) + 0.5*cos(8*x+9)
plot(y, type='l')
y <- sin(x)
plot(y, type='l')
y <- sin(2x) + 1
plot(y, type='l')
y <- sin(2*x) + 1
plot(y, type='l')
y <- 1 + sin(2*x) +  0.5*cos(2*x)
plot(y, type='l')
y <- 1 + sin(2*x)
plot(y, type='l')
y <- 1 + sin(2*x) +  0.5*cos(2*x+2)
plot(y, type='l')
y <- 1 + sin(2*x) +  5*cos(2*x+2)
plot(y, type='l')
y <- 1 + sin(2*x) +  5*cos(0.5*x)
plot(y, type='l')
plot(y, xlim=c(0,10), type='l')
plot(y,  type='l')
plot(y,x, type='l')
plot(x, ytype='l')
plot(x, y,type='l')
y <- sin(2*x) +  5*cos(0.5*x)
plot(x, y,type='l')
?plot
?cex
??cex
plot(x, y,type='l', cex.axis=2)
plot(x, y,type='l', cex.axis=1.5)
plot(x, y,type='l', cex.axis=1.5, cex.names=1.5)
plot(x, y,type='l', cex.axis=1.5, cex.lab=1.5)
plot(x, y,type='l', cex.axis=1.5, cex.lab=1.5)
？optim
?optim
install.package('optimization')
install.packages('optimization')
hi <- function(x){(x[1]**2 + x[2] - 11)**2 + (x[1] + x[2]**2 -7)**2}
optim_nm(fun = hi, k = 2)
library(optimization)
hi <- function(x){(x[1]**2 + x[2] - 11)**2 + (x[1] + x[2]**2 -7)**2}
optim_nm(fun = hi, k = 2)
optim_sa(fun = hi, start = c(runif(2, min = -1, max = 1)),
trace = FALSE,
lower = c(-4, -4),
upper = c(4, 4),
control = list(dyn_rf = FALSE,
rf = 1.2,
t0 = 10,
nlimit = 100,
r = 0.6,
t_min = 0.1
)
)
##### Rosenbrock function
# minimum at f(1,1) = 0
ro <- function(x){
100*(x[2]-x[1]^2)^2+(1-x[1])^2
}
# Random start values. Example arguments for the relatively simple Rosenbrock function.
ro_sa <- optim_sa(fun = ro,
start = c(runif(2, min = -1, max = 1)),
lower = c(-5, -5),
upper = c(5, 5),
trace = TRUE,
control = list(t0 = 100,
nlimit = 550,
t_min = 0.1,
dyn_rf = FALSE,
rf = 1,
r = 0.7
)
)
# Visual inspection.
plot(ro_sa)
plot(ro_sa, type = "contour")
getwd()
LOSS <- function(sigma) {
x11 <- seas(data, x11='')
ssm <- SSModel(data ~ SSMtrend(1, Q=list(sigma[2])) + SSMseasonal(12, sea.type = 'dummy', Q=NA), H=sigma[1])
kfs <- KFS(ssm)
seasonal_x11 <- series(x11, "d10")
trend_x11 <- series(x11, "d12")
seasonal_kfs <- signal(kfs, "seasonal")$signal
trend_kfs <- signal(kfs, "trend")$signal
l <- sum((seasonal_x11-seasonal_kfs)^2) + sum((trend_x11-trend_kfs)^2) + sum((diff(trend_x11)-diff(trend_kfs))^2)
return(l)
}
data <- simlist[[1]]
optim_nm(LOSS, k=2)
library(seasonal)
library(KFAS)
library(doParallel)
library(dplyr)
library(ggplot2)
library(scales)
library(forecast)
optim_nm(LOSS, k=2)
optim_nm(LOSS, k=2)
optim_sa(fun = LOSS,
start = c(runif(2, min = 0, max = 1)),
lower = c(0, 0),
upper = c(1000, 1000),
trace = TRUE,
control = list(t0 = 100,
nlimit = 550,
t_min = 0.1,
dyn_rf = FALSE,
rf = 1,
r = 0.7
)
)
library(seasonal)
library(KFAS)
library(doParallel)
library(dplyr)
library(ggplot2)
library(scales)
library(forecast)
optim_sa(fun = LOSS,
start = c(runif(2, min = 0, max = 1)),
lower = c(0, 0),
upper = c(1000, 1000),
trace = TRUE,
control = list(t0 = 100,
nlimit = 550,
t_min = 0.1,
dyn_rf = FALSE,
rf = 1,
r = 0.7
)
)
ssm <- SSModel(data ~ SSMtrend(1, Q=list(sigma[2])) + SSMseasonal(12, sea.type = 'dummy', Q=1), H=sigma[1])
kfs <- KFS(ssm)
sigma <- c(runif(2, min = 0, max = 1))
ssm <- SSModel(data ~ SSMtrend(1, Q=list(sigma[2])) + SSMseasonal(12, sea.type = 'dummy', Q=1), H=sigma[1])
kfs <- KFS(ssm)
install.packages('dfoptim')
library(dfoptim)
nmkb(par=c(1,1), LOSS, lower=0, upper=1000)
optim_sa(fun = LOSS,
start = c(runif(2, min = 0, max = 1)),
lower = c(0, 0),
upper = c(1000, 1000),
)
optim_sa(fun = LOSS,
start = c(runif(2, min = 0, max = 1)),
lower = c(0, 0),
upper = c(1000, 1000)
)
optim(par = c(1,1),
fn = LOSS,
method = 'Nelder-Mead',
lower = 0,
upper = 1000)
optim(par = c(1,1),
fn = LOSS,
method = 'Nelder-Mead',
lower = 0.01,
upper = 1000)
rm(list = ls())
setwd('C:/Users/GuoLY/desktop/markdown/2020 Winter/masterthesis/file9')
load('.RData')
library(seasonal)
library(KFAS)
library(doParallel)
library(dplyr)
library(ggplot2)
library(scales)
library(forecast)
library(extraDistr)
library(lubridate)
library(dfoptim)
library(fitdistrplus)
unemp_ssm_loss1 <- SSModel(unemp_decomp ~ SSMtrend(1,Q=list(2.90625))+SSMseasonal(12,sea.type = 'dummy',Q=1.875), H=3.93750)
unemp_kfs_loss1 <- KFS(unemp_ssm_loss1)
sum_loss1 <- sum(diff(signal(unemp_kfs_loss1, 'seasonal')$signal)^2) + sum(diff(signal(unemp_kfs_loss1, 'trend')$signal)^2) + sum(diff(residuals(unemp_kfsm_loss1,'response'))^2)
prop_loss1 <- c(sum(diff(signal(unemp_kfs_loss1, 'seasonal')$signal)^2) / sum_loss1, sum(diff(signal(unemp_kfs_loss1, 'trend')$signal)^2) / sum_loss1, sum(diff(residuals(unemp_kfs_loss1,'response'))^2) / sum_loss1)
model2 <- c(rep('X-11', 3), rep('SSM_MLE', 3), rep('SSM_LOSS1', 3), rep('SSM_LOSS2', 3))
component <- rep(c('seasonal', 'trend', 'irregular'), 4)
error_prop2 <- data.frame(model2, component, value=c(prop_x11, prop_mle, prop_loss1, prop_ideal))
ggplot(error_prop2, aes(fill=component, y=value, x=model2)) +
geom_bar(position="fill", stat="identity") + labs(x='', y='', title='Variability absorbed by each component')
sum_loss1 <- sum(diff(signal(unemp_kfs_loss1, 'seasonal')$signal)^2) + sum(diff(signal(unemp_kfs_loss1, 'trend')$signal)^2) + sum(diff(residuals(unemp_kfs_loss1,'response'))^2)
prop_loss1 <- c(sum(diff(signal(unemp_kfs_loss1, 'seasonal')$signal)^2) / sum_loss1, sum(diff(signal(unemp_kfs_loss1, 'trend')$signal)^2) / sum_loss1, sum(diff(residuals(unemp_kfs_loss1,'response'))^2) / sum_loss1)
model2 <- c(rep('X-11', 3), rep('SSM_MLE', 3), rep('SSM_LOSS1', 3), rep('SSM_LOSS2', 3))
component <- rep(c('seasonal', 'trend', 'irregular'), 4)
error_prop2 <- data.frame(model2, component, value=c(prop_x11, prop_mle, prop_loss1, prop_ideal))
ggplot(error_prop2, aes(fill=component, y=value, x=model2)) +
geom_bar(position="fill", stat="identity") + labs(x='', y='', title='Variability absorbed by each component')
