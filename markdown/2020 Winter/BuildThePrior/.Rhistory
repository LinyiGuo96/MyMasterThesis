?diff
diff(series(x11, "d12"), lag = 1)
var(diff(series(x11, "d12"), lag = 1))
series(x11, "d12")
var(series(x11, "d12"))
var(diff(series(x11, "d12"), lag = 1))
series(x11, "d10")
seasonal_sum <- function(x11) {
season <- series(x11, "d10")
for( i in 12:length(season)){
sum <- sum(season[(i-11):i])
seasonal_sum <- c(seasonal_sum, sum)
}
return(seasonal_sum)
}
seasonal_sum(x11)
class(seasonal_sum(x11))
seasonal_sum <- function(x11) {
season <- series(x11, "d10")
seasonal_sum <- c()
for( i in 12:length(season)){
sum <- sum(season[(i-11):i])
seasonal_sum <- c(seasonal_sum, sum)
}
return(seasonal_sum)
}
seasonal_sum(x11)
var(seasonal_sum(x11))
plot(seasonal_sum(x11))
plot(seasonal_sum(x11), type='l')
plot(signal(kfas,"seasonal")$signal)
plot(signal(kfas,"trend")$signal)
plot(data[[4]])
getwd()
A much better way to do this is to use the `titlepage` environment. We will write a seperate `.txt` file and input it.
update.packages(ask = FALSE, checkBuilt = TRUE)  # update R packages
tinytex::tlmgr_update()
install.packages('tinytex')
install.packages("tinytex")
tinytex::tlmgr_update()  # update LaTeX packages
getwd()
for(i in 1:10){
plot(data[[i]])
}
par(mfrow=c(5,2))
for(i in 1:10){
plot(data[[i]])
}
par(mfrow= c(1,1))
library(forecast)
library(seasonal)
library(KFAS)
rm(list=ls())
set.seed(9483)
data <- simlist1(10, 180)
simulation1 <- function(length){
model <- Arima(ts(rnorm(240,sd=runif(1, 1, 100)),start=c(1980,01),frequency =12), order=c(0,1,1),
seasonal=c(0,1,1), fixed=c(theta=runif(1), Theta=runif(1)))
data <- simulate(model, nsim=length)
# because if we need to take log later, data must be positive
if(min(data) <= 0) data <- data - min(data) + runif(1, min=0, max = 10^6)
else data <- data + runif(1, min=0, max=10^6)
return(data)
}
simlist1 <- function(n,length) {
Datalist <- list()
for (i in 1:n)  Datalist[[i]] <- simulation1(length)
return(Datalist)
}
model <- SSModel(matrix(NA, 120, 1) ~ SSMtrend(1, Q=list(10)) + SSMseasonal(12, sea.type = "dummy", Q=.01), H=1)
sim <- simulateSSM(model, "obs")
library(seasonal)
library(KFAS)
model <- SSModel(matrix(NA, 120, 1) ~ SSMtrend(1, Q=list(10)) + SSMseasonal(12, sea.type = "dummy", Q=.01), H=1)
sim <- simulateSSM(model, "obs")
plot(sim[,,1], type='l')
ssm <- SSModel(sim ~ SSMtrend(1, Q=list(NA) + SSMseasonal(12, sea.type = 'dummy', Q=NA), H=NA))
fit <- fitSSM(ssm, inits = c(1,1,1))
ssm <- SSModel(sim[,,1] ~ SSMtrend(1, Q=list(NA) + SSMseasonal(12, sea.type = 'dummy', Q=NA), H=NA))
fit <- fitSSM(ssm, inits = c(1,1,1))
ssm <- SSModel(sim[,,1] ~ SSMtrend(1, Q=list(NA)) + SSMseasonal(12, sea.type = 'dummy', Q=NA), H=NA)
fit <- fitSSM(ssm, inits = c(1,1,1))
kfs <- KFS(fit)
kfs <- KFS(fit$model)
plot(signal(kfs, state="seasonal"))
plot(signal(kfs, state="seasonal")$signal)
plot(signal(kfs, state="trend")$signal)
fit$model["Q"]
fit$model["H"]
sim <- ts(sim, start = c(2000,01), frequency = 12)
model_x11 <- seas(sim, x11='')
summary(model_x11)
plot(series(model_x11, "d10"))
par(mfrow=c(2,2))
par(mfrow=c(2,2))
plot(series(model_x11, "d10"))
plot(signal(kfs, state="seasonal")$signal)
plot(series(model_x11, "d12"))
plot(signal(kfs, state="trend")$signal)
par(mfrow=c(1,1))
model <- SSModel(matrix(NA, 120, 1) ~ SSMtrend(1, Q=list(10)) + SSMseasonal(12, sea.type = "dummy", Q=.01), H=1)
sim <- simulateSSM(model, "obs")
sim <- ts(sim, start = c(2000,01), frequency = 12)
plot(sim[,,1], type='l')
ssm <- SSModel(sim[,,1] ~ SSMtrend(1, Q=list(NA)) + SSMseasonal(12, sea.type = 'dummy', Q=NA), H=NA)
fit <- fitSSM(ssm, inits = c(1,1,1))
kfs <- KFS(fit$model)
model_x11 <- seas(sim, x11='')
summary(model_x11)
par(mfrow=c(2,2))
plot(series(model_x11, "d10"))
plot(signal(kfs, state="seasonal")$signal)
plot(series(model_x11, "d12"))
plot(signal(kfs, state="trend")$signal)
par(mfrow=c(1,1))
ssm2 <- SSModel(sim[,,1] ~ SSMtrend(1, Q=list(10)) + SSMseasonal(12, sea.type = "dummy", Q=.01), H=1)
kfs2 <- KFS(ssm2)
par(mfrow=c(2,3))
plot(series(model_x11, "d10"))
plot(signal(kfs, state="seasonal")$signal)
plot(signal(kfs2, state="seasonal")$signal)
plot(series(model_x11, "d12"))
plot(signal(kfs, state="trend")$signal)
plot(signal(kfs2, state="trend")$signal)
par(mfrow=c(1,1))
ssm2 <- SSModel(sim[,,1] ~ SSMtrend(1, Q=list(1)) + SSMseasonal(12, sea.type = "dummy", Q=.1), H=1)
kfs2 <- KFS(ssm2)
par(mfrow=c(2,3))
plot(series(model_x11, "d10"))
plot(signal(kfs, state="seasonal")$signal)
plot(signal(kfs2, state="seasonal")$signal)
plot(series(model_x11, "d12"))
plot(signal(kfs, state="trend")$signal)
plot(signal(kfs2, state="trend")$signal)
par(mfrow=c(1,1))
ssm2 <- SSModel(sim[,,1] ~ SSMtrend(1, Q=list(1)) + SSMseasonal(12, sea.type = "dummy", Q=1), H=1)
kfs2 <- KFS(ssm2)
par(mfrow=c(2,3))
plot(series(model_x11, "d10"))
plot(signal(kfs, state="seasonal")$signal)
plot(signal(kfs2, state="seasonal")$signal)
plot(series(model_x11, "d12"))
plot(signal(kfs, state="trend")$signal)
plot(signal(kfs2, state="trend")$signal)
par(mfrow=c(1,1))
model <- SSModel(matrix(NA, 180, 1) ~ SSMtrend(1, Q=list(1)) + SSMseasonal(12, sea.type = "dummy", Q=1), H=1)
sim <- simulateSSM(model, "obs")
sim <- ts(sim[,,1], start = c(2000,01), frequency = 12)
plot(sim[,,1], type='l')
ssm <- SSModel(sim[,,1] ~ SSMtrend(1, Q=list(NA)) + SSMseasonal(12, sea.type = 'dummy', Q=NA), H=NA)
fit <- fitSSM(ssm, inits = c(1,1,1))
kfs <- KFS(fit$model)
fit$model["Q"]
fit$model["H"]
model_x11 <- seas(sim, x11='')
summary(model_x11)
par(mfrow=c(2,2))
plot(series(model_x11, "d10"))
plot(signal(kfs, state="seasonal")$signal)
plot(series(model_x11, "d12"))
plot(signal(kfs, state="trend")$signal)
par(mfrow=c(1,1))
ssm2 <- SSModel(sim[,,1] ~ SSMtrend(1, Q=list(1)) + SSMseasonal(12, sea.type = "dummy", Q=1), H=1)
kfs2 <- KFS(ssm2)
par(mfrow=c(2,3))
plot(series(model_x11, "d10"))
plot(signal(kfs, state="seasonal")$signal)
plot(signal(kfs2, state="seasonal")$signal)
plot(series(model_x11, "d12"))
plot(signal(kfs, state="trend")$signal)
plot(signal(kfs2, state="trend")$signal)
par(mfrow=c(1,1))
model <- SSModel(matrix(NA, 180, 1) ~ SSMtrend(1, Q=list(1)) + SSMseasonal(12, sea.type = "dummy", Q=1), H=1)
sim <- simulateSSM(model, "obs")
sim <- ts(sim[,,1], start = c(2000,01), frequency = 12)
plot(sim[,,1], type='l')
ssm <- SSModel(sim ~ SSMtrend(1, Q=list(NA)) + SSMseasonal(12, sea.type = 'dummy', Q=NA), H=NA)
fit <- fitSSM(ssm, inits = c(1,1,1))
kfs <- KFS(fit$model)
fit$model["Q"]
fit$model["H"]
model_x11 <- seas(sim, x11='')
summary(model_x11)
par(mfrow=c(2,2))
plot(series(model_x11, "d10"))
plot(signal(kfs, state="seasonal")$signal)
plot(series(model_x11, "d12"))
plot(signal(kfs, state="trend")$signal)
par(mfrow=c(1,1))
ssm2 <- SSModel(sim ~ SSMtrend(1, Q=list(1)) + SSMseasonal(12, sea.type = "dummy", Q=1), H=1)
kfs2 <- KFS(ssm2)
par(mfrow=c(2,3))
plot(series(model_x11, "d10"))
plot(signal(kfs, state="seasonal")$signal)
plot(signal(kfs2, state="seasonal")$signal)
plot(series(model_x11, "d12"))
plot(signal(kfs, state="trend")$signal)
plot(signal(kfs2, state="trend")$signal)
par(mfrow=c(1,1))
model <- SSModel(matrix(NA, 180, 1) ~ SSMtrend(1, Q=list(1)) + SSMseasonal(12, sea.type = "dummy", Q=1), H=1)
sim <- simulateSSM(model, "obs")
sim <- ts(sim[,,1], start = c(2000,01), frequency = 12)
plot(sim, type='l')
ssm <- SSModel(sim ~ SSMtrend(1, Q=list(NA)) + SSMseasonal(12, sea.type = 'dummy', Q=NA), H=NA)
fit <- fitSSM(ssm, inits = c(1,1,1))
kfs <- KFS(fit$model)
fit$model["Q"]
fit$model["H"]
model_x11 <- seas(sim, x11='')
summary(model_x11)
par(mfrow=c(2,2))
plot(series(model_x11, "d10"))
plot(signal(kfs, state="seasonal")$signal)
plot(series(model_x11, "d12"))
plot(signal(kfs, state="trend")$signal)
par(mfrow=c(1,1))
ssm2 <- SSModel(sim ~ SSMtrend(1, Q=list(1)) + SSMseasonal(12, sea.type = "dummy", Q=1), H=1)
kfs2 <- KFS(ssm2)
par(mfrow=c(2,3))
plot(series(model_x11, "d10"))
plot(signal(kfs, state="seasonal")$signal)
plot(signal(kfs2, state="seasonal")$signal)
plot(series(model_x11, "d12"))
plot(signal(kfs, state="trend")$signal)
plot(signal(kfs2, state="trend")$signal)
par(mfrow=c(1,1))
model <- SSModel(matrix(NA, 180, 1) ~ SSMtrend(1, Q=list(1)) + SSMseasonal(12, sea.type = "dummy", Q=1), H=1)
sim <- simulateSSM(model, "obs")
sim <- ts(sim[,,1], start = c(2000,01), frequency = 12)
plot(sim, type='l')
model <- SSModel(matrix(NA, 180, 1) ~ SSMtrend(1, Q=list(1)) + SSMseasonal(12, sea.type = "dummy", Q=1), H=1)
sim <- simulateSSM(model, "obs")
sim <- ts(sim[,,1], start = c(2000,01), frequency = 12)
plot(sim, type='l')
model <- SSModel(matrix(NA, 180, 1) ~ SSMtrend(1, Q=list(1)) + SSMseasonal(12, sea.type = "dummy", Q=1), H=1)
sim <- simulateSSM(model, "obs")
sim <- ts(sim[,,1], start = c(2000,01), frequency = 12)
plot(sim, type='l')
model <- SSModel(matrix(NA, 180, 1) ~ SSMtrend(1, Q=list(1)) + SSMseasonal(12, sea.type = "dummy", Q=1), H=1)
sim <- simulateSSM(model, "obs")
sim <- ts(sim[,,1], start = c(2000,01), frequency = 12)
plot(sim, type='l')
model <- SSModel(matrix(NA, 180, 1) ~ SSMtrend(1, Q=list(1)) + SSMseasonal(12, sea.type = "dummy", Q=1), H=1)
sim <- simulateSSM(model, "obs")
sim <- ts(sim[,,1], start = c(2000,01), frequency = 12)
plot(sim, type='l')
model <- SSModel(matrix(NA, 180, 1) ~ SSMtrend(1, Q=list(1)) + SSMseasonal(12, sea.type = "dummy", Q=1), H=1)
sim <- simulateSSM(model, "obs")
sim <- ts(sim[,,1], start = c(2000,01), frequency = 12)
plot(sim, type='l')
ssm <- SSModel(sim ~ SSMtrend(1, Q=list(NA)) + SSMseasonal(12, sea.type = 'dummy', Q=NA), H=NA)
fit <- fitSSM(ssm, inits = c(1,1,1))
kfs <- KFS(fit$model)
fit$model["Q"]
fit$model["H"]
model_x11 <- seas(sim, x11='')
summary(model_x11)
par(mfrow=c(2,2))
plot(series(model_x11, "d10"))
plot(signal(kfs, state="seasonal")$signal)
plot(series(model_x11, "d12"))
plot(signal(kfs, state="trend")$signal)
par(mfrow=c(1,1))
ssm2 <- SSModel(sim ~ SSMtrend(1, Q=list(1)) + SSMseasonal(12, sea.type = "dummy", Q=1), H=1)
kfs2 <- KFS(ssm2)
par(mfrow=c(2,3))
plot(series(model_x11, "d10"))
plot(signal(kfs, state="seasonal")$signal)
plot(signal(kfs2, state="seasonal")$signal)
plot(series(model_x11, "d12"))
plot(signal(kfs, state="trend")$signal)
plot(signal(kfs2, state="trend")$signal)
par(mfrow=c(1,1))
ssm2 <- SSModel(sim ~ SSMtrend(1, Q=list(0.5)) + SSMseasonal(12, sea.type = "dummy", Q=1), H=1)
kfs2 <- KFS(ssm2)
par(mfrow=c(2,3))
plot(series(model_x11, "d10"))
plot(signal(kfs, state="seasonal")$signal)
plot(signal(kfs2, state="seasonal")$signal)
plot(series(model_x11, "d12"))
plot(signal(kfs, state="trend")$signal)
plot(signal(kfs2, state="trend")$signal)
par(mfrow=c(1,1))
ssm2 <- SSModel(sim ~ SSMtrend(1, Q=list(0.1)) + SSMseasonal(12, sea.type = "dummy", Q=1), H=1)
kfs2 <- KFS(ssm2)
par(mfrow=c(2,3))
plot(series(model_x11, "d10"))
plot(signal(kfs, state="seasonal")$signal)
plot(signal(kfs2, state="seasonal")$signal)
plot(series(model_x11, "d12"))
plot(signal(kfs, state="trend")$signal)
plot(signal(kfs2, state="trend")$signal)
par(mfrow=c(1,1))
ssm2 <- SSModel(sim ~ SSMtrend(1, Q=list(0.3)) + SSMseasonal(12, sea.type = "dummy", Q=1), H=1)
kfs2 <- KFS(ssm2)
par(mfrow=c(2,3))
plot(series(model_x11, "d10"))
plot(signal(kfs, state="seasonal")$signal)
plot(signal(kfs2, state="seasonal")$signal)
plot(series(model_x11, "d12"))
plot(signal(kfs, state="trend")$signal)
plot(signal(kfs2, state="trend")$signal)
par(mfrow=c(1,1))
par(mfrow=c(2,3))
plot(series(model_x11, "d10"))
plot(signal(kfs, state="seasonal")$signal, title= "mle")
plot(signal(kfs2, state="seasonal")$signal)
plot(series(model_x11, "d12"))
plot(signal(kfs, state="trend")$signal)
plot(signal(kfs2, state="trend")$signal)
par(mfrow=c(1,1))
plot(signal(kfs, state="seasonal")$signal, main= "mle")
par(mfrow=c(2,3))
plot(series(model_x11, "d10"))
plot(signal(kfs, state="seasonal")$signal, main= "mle")
plot(signal(kfs2, state="seasonal")$signal, main="try")
plot(series(model_x11, "d12"))
plot(signal(kfs, state="trend")$signal, main="mle")
plot(signal(kfs2, state="trend")$signal, main="try")
par(mfrow=c(1,1))
plot(series(model_x11, "d10"))
plot(series(model_x11, "d10"), ylim=c(-10,10), ylab='')
par(new=TRUE)
plot(signal(kfs, state="seasonal")$signal, main= "mle", ylim=c(-10,10), ylab='')
plot(series(model_x11, "d10"), ylim=c(-10,10), ylab='')
par(new=TRUE)
plot(signal(kfs, state="seasonal")$signal, main= "mle", ylim=c(-10,10), ylab='', col=2, lty=2)
plot(series(model_x11, "d10"), ylim=c(-10,10), ylab='')
par(new=TRUE)
plot(signal(kfs, state="seasonal")$signal, main= "mle", ylim=c(-10,10), ylab='', col=2, lty=2)
par(new=TRUE)
plot(signal(kfs2, state="seasonal")$signal, main= "mle", ylim=c(-10,10), ylab='', col=3, lty=3)
plot(series(model_x11, "d10"), ylim=c(-10,10), ylab='')
par(new=TRUE)
plot(signal(kfs, state="seasonal")$signal, main= "mle", ylim=c(-10,10), ylab='', col=2, lty=2)
par(new=TRUE)
plot(signal(kfs2, state="seasonal")$signal, main= "mle", ylim=c(-10,10), ylab='', col=3, lty=3, lwd=1.5)
plot(series(model_x11, "d10"), ylim=c(-10,10), ylab='')
par(new=TRUE)
plot(signal(kfs, state="seasonal")$signal, main= "mle", ylim=c(-10,10), ylab='', col=2, lty=2)
par(new=TRUE)
plot(signal(kfs2, state="seasonal")$signal, main= "mle", ylim=c(-10,10), ylab='', col=3, lty=3, lwd=2)
plot(series(model_x11, "d12"), ylab='')
plot(series(model_x11, "d12"), ylim=c(-5,10), ylab='')
par(new=TRUE)
plot(signal(kfs, state="trend")$signal, main= "mle", ylim=c(-5,10), ylab='', col=2, lty=2)
par(new=TRUE)
plot(signal(kfs2, state="trend")$signal, main= "mle", ylim=c(-5,10), ylab='', col=3, lty=3, lwd=2)
plot(series(model_x11, "d12"), ylim=c(-5,10), ylab='')
par(new=TRUE)
plot(signal(kfs, state="trend")$signal, main= "mle", ylim=c(-5,10), ylab='', col=2, lty=2)
par(new=TRUE)
plot(signal(kfs2, state="trend")$signal, main= "mle", ylim=c(-5,10), ylab='', col=3, lty=3, lwd=3)
plot(series(model_x11, "d12"), ylim=c(-5,10), ylab='')
par(new=TRUE)
plot(signal(kfs, state="trend")$signal, main= "mle", ylim=c(-5,10), ylab='', col=2, lty=2, lwd=3)
par(new=TRUE)
plot(signal(kfs2, state="trend")$signal, main= "mle", ylim=c(-5,10), ylab='', col=3, lty=3, lwd=3)
plot(series(model_x11, "d12"), ylim=c(-5,10), ylab='', lwd=2.5)
par(new=TRUE)
plot(signal(kfs, state="trend")$signal, main= "mle", ylim=c(-5,10), ylab='', col=2, lty=2, lwd=2)
par(new=TRUE)
plot(signal(kfs2, state="trend")$signal, main= "mle", ylim=c(-5,10), ylab='', col=3, lty=3, lwd=3)
plot(series(model_x11, "d10"), ylim=c(-10,10), ylab='')
par(new=TRUE)
plot(signal(kfs, state="seasonal")$signal, ylim=c(-10,10), ylab='', col=2, lty=2)
par(new=TRUE)
plot(signal(kfs2, state="seasonal")$signal, ylim=c(-10,10), ylab='', col=3, lty=3, lwd=2)
plot(series(model_x11, "d12"), ylim=c(-5,10), ylab='', lwd=2.5)
par(new=TRUE)
plot(signal(kfs, state="trend")$signal, ylim=c(-5,10), ylab='', col=2, lty=2, lwd=2)
par(new=TRUE)
plot(signal(kfs2, state="trend")$signal, ylim=c(-5,10), ylab='', col=3, lty=3, lwd=3)
logLik(ssm)
logLik(ssm2)
logLik(fit$model)
setwd("C:/Users/guoly/Desktop/markdown/2020 Winter/BuildThePrior")
idevalmat1_1 <- read.csv("data/idevalmat1_1.csv")
idevalmat1_2 <- read.csv("data/idevalmat1_2.csv")
idevalmat1_3 <- read.csv("data/idevalmat1_3.csv")
idevalmat1_4 <- read.csv("data/idevalmat1_4.csv")
idevalmat1_5 <- read.csv("data/idevalmat1_5.csv")
idevalmat1_6 <- read.csv("data/idevalmat1_6.csv")
idevalmat1_7 <- read.csv("data/idevalmat1_7.csv")
idevalmat1_8 <- read.csv("data/idevalmat1_8.csv")
idevalmat2_1 <- read.csv("data/idevalmat2_1.csv")
idevalmat2_2 <- read.csv("data/idevalmat2_2.csv")
idevalmat2_3 <- read.csv("data/idevalmat2_3.csv")
idevalmat2_4 <- read.csv("data/idevalmat2_4.csv")
idevalmat2_5 <- read.csv("data/idevalmat2_5.csv")
idevalmat2_6 <- read.csv("data/idevalmat2_6.csv")
idevalmat2_7 <- read.csv("data/idevalmat2_7.csv")
idevalmat2_8 <- read.csv("data/idevalmat2_8.csv")
idevalmat3_1 <- read.csv("data/idevalmat3_1.csv")
idevalmat3_2 <- read.csv("data/idevalmat3_2.csv")
idevalmat3_3 <- read.csv("data/idevalmat3_3.csv")
idevalmat3_4 <- read.csv("data/idevalmat3_4.csv")
idevalmat3_5 <- read.csv("data/idevalmat3_5.csv")
idevalmat3_6 <- read.csv("data/idevalmat3_6.csv")
idevalmat3_7 <- read.csv("data/idevalmat3_7.csv")
idevalmat3_8 <- read.csv("data/idevalmat3_8.csv")
## put them together
Idevalmat <- rbind(idevalmat1_1,idevalmat1_2,idevalmat1_3,idevalmat1_4,idevalmat1_5,idevalmat1_6,idevalmat1_7,idevalmat1_8,
idevalmat2_1,idevalmat2_2,idevalmat2_3,idevalmat2_4,idevalmat2_5,idevalmat2_6,idevalmat2_7,idevalmat2_8,
idevalmat3_1,idevalmat3_2,idevalmat3_3,idevalmat3_4,idevalmat3_5,idevalmat3_6,idevalmat3_7,idevalmat3_8)
Idevalmat1 <- rbind(idevalmat1_1, idevalmat1_2, idevalmat1_3, idevalmat1_4, idevalmat1_5, idevalmat1_6,idevalmat1_7,idevalmat1_8)
Idevalmat2 <- rbind(idevalmat2_1, idevalmat2_2, idevalmat2_3, idevalmat2_4, idevalmat2_5, idevalmat2_6,idevalmat2_7,idevalmat2_8)
Idevalmat3 <- rbind(idevalmat3_1, idevalmat3_2, idevalmat3_3, idevalmat3_4, idevalmat3_5, idevalmat3_6,idevalmat3_7,idevalmat3_8)
# note: the first column of Idevalmat,1,2,3 is 1:n instead of variance
x <- seq(0.2,20,0.2)
Df <- c()
for (i in 1:10) {
for (j in 1:10) {
y <- df(x, df1 = i, df2 = j) # f distribution's density
df <- data.frame(x=x, y=y, df1=i, df2=j)
Df <- rbind(Df, df)
}
}
ggplot(data= Df, aes(x= x, y=y) ) +
geom_line() +
facet_grid(df1~df2) + # rows are df1
theme(axis.text.x = element_blank(),axis.text.y = element_blank(),axis.ticks = element_blank())
p2 <- ggplot() +
geom_line(data= Df, aes(x= x, y=y)) +
facet_grid(df1~df2) +  # rows are df1
theme(axis.text.x = element_blank(),axis.text.y = element_blank(),axis.ticks = element_blank())
p2 <- p2 + geom_density(data= Idevalmat, aes(x=variance.2), color="red")
p2
library(ggpubr)
ggplot(data= Df, aes(x= x, y=y) ) +
geom_line() +
facet_grid(df1~df2) + # rows are df1
theme(axis.text.x = element_blank(),axis.text.y = element_blank(),axis.ticks = element_blank())
p2 <- ggplot() +
geom_line(data= Df, aes(x= x, y=y)) +
facet_grid(df1~df2) +  # rows are df1
theme(axis.text.x = element_blank(),axis.text.y = element_blank(),axis.ticks = element_blank())
p2 <- p2 + geom_density(data= Idevalmat, aes(x=variance.2), color="red")
p2
# the distribution of variance.2 seems to be a f distribution
Df2 <- c()
for (i in 1:10) {
for (j in 1:10) {
y <- dgamma(x, shape = i, rate = j)
df <- data.frame(x=x, y=y, shape=i, rate = j)
Df2 <- rbind(Df2, df)
}
}
p1 <- ggplot() + geom_line(data=Df2, aes(x=x, y=y)) +
facet_grid(shape~rate) +
theme(axis.text = element_blank(), axis.ticks = element_blank())
p1 <- p1 + geom_density(data=Idevalmat, aes(x=variance.1), color="blue")
p1
library(doParallel)
?logLik
?df
logPost <- foreach(i = 1:100, .packages = c("seasonal", "KFAS"), .combine = "rbind") %:%
foreach(j = 1:100, .combine = "rbind")  %dopar% {
ssm <- SSModel(sim ~ SSMtrend(1, Q=list(j*0.2)) + SSMseasonal(12, sea.type = 'dummy', Q=1), H=0.2*i)
logpost <- logLik(ssm) + df(df1=10, df2=5, x=j*0.2, log=TRUE) + dgamma(x=i*0.2, shape=9, rate=3, log=TRUE)
c(i*.2, j*.2, logpost)
}
registerDoParallel(8)
system.time({
logPost <- foreach(i = 1:100, .packages = c("seasonal", "KFAS"), .combine = "rbind") %:%
foreach(j = 1:100, .combine = "rbind")  %dopar% {
ssm <- SSModel(sim ~ SSMtrend(1, Q=list(j*0.2)) + SSMseasonal(12, sea.type = 'dummy', Q=1), H=0.2*i)
logpost <- logLik(ssm) + df(df1=10, df2=5, x=j*0.2, log=TRUE) + dgamma(x=i*0.2, shape=9, rate=3, log=TRUE)
c(i*.2, j*.2, logpost)
}
})
stopCluster(8)
logPost[which.max(logPost[,3]),]
fit$model["Q"]
fit$model["H"]
.91/.7
1.13/.7
ssm2 <- SSModel(sim ~ SSMtrend(1, Q=list(1)) + SSMseasonal(12, sea.type = "dummy", Q=1), H=1.2)
kfs2 <- KFS(ssm2)
par(mfrow=c(2,3))
plot(series(model_x11, "d10"))
plot(signal(kfs, state="seasonal")$signal, main= "mle")
plot(signal(kfs2, state="seasonal")$signal, main="try")
plot(series(model_x11, "d12"))
plot(signal(kfs, state="trend")$signal, main="mle")
plot(signal(kfs2, state="trend")$signal, main="try")
par(mfrow=c(1,1))
plot(signal(unempkfs1, "seasonal")$signal)
par(new=TRUE)
plot(signal(unempkfs2, "seasonal")$signal)
unempssm1 <- SSModel(unemp ~ SSMtrend(1, Q= list(3)) + SSMseasonal(12, sea.type = 'dummy', Q=2), H=1)
unempkfs1 <- KFS(unempssm1)
unempssm2 <- SSModel(unemp ~ SSMtrend(1, Q= list(6)) + SSMseasonal(12, sea.type = 'dummy', Q=4), H=2)
unempkfs2 <- KFS(unempssm2)
plot(signal(unempkfs1, "seasonal")$signal)
par(new=TRUE)
plot(signal(unempkfs2, "seasonal")$signal)
plot(signal(unempkfs1, "seasonal")$signal)
par(new=TRUE)
plot(signal(unempkfs2, "seasonal")$signal)
plot(signal(unempkfs1, "seasonal")$signal)
par(new=TRUE)
plot(signal(unempkfs2, "seasonal")$signal, col=2, lwd=2)
plot(signal(unempkfs1, "seasonal")$signal, lwd=2)
par(new=TRUE)
plot(signal(unempkfs2, "seasonal")$signal, col=2, lwd=2, lty=2)
plot(signal(unempkfs1, "trend")$signal)
par(new=TRUE)
plot(signal(unempkfs2, "trend")$signal)
plot(residuals(unempkfs1, "recursive"))
par(new=TRUE)
plot(residuals(unempkfs2, "recursive"))
